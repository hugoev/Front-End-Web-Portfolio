{"version":3,"file":"static/js/experience.bab53790.chunk.js","mappings":"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","sources":["components/ExperienceSection.tsx","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import { AnimatePresence, motion } from 'framer-motion';\nimport { memo, useCallback, useState } from 'react';\n\ninterface Experience {\n  company: string;\n  logo: JSX.Element;\n  role: string;\n  period: string;\n  description: string[];\n  skills: string[];\n}\n\nconst experiences: Experience[] = [\n  {\n    company: \"Full-Stack Developer\",\n    logo: (\n      <svg viewBox=\"0 0 640 512\" className=\"w-full h-full\">\n        <path fill=\"currentColor\" d=\"M392.8 1.2c-17-4.9-34.7 5-39.6 22l-128 448c-4.9 17 5 34.7 22 39.6s34.7-5 39.6-22l128-448c4.9-17-5-34.7-22-39.6zm80.6 120.1c-12.5 12.5-12.5 32.8 0 45.3L562.7 256l-89.4 89.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0l112-112c12.5-12.5 12.5-32.8 0-45.3l-112-112c-12.5-12.5-32.8-12.5-45.3 0zm-306.7 0c-12.5-12.5-32.8-12.5-45.3 0l-112 112c-12.5 12.5-12.5 32.8 0 45.3l112 112c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L77.3 256l89.4-89.4c12.5-12.5 12.5-32.8 0-45.3z\"/>\n      </svg>\n    ),\n    role: \"Full-Stack Software Engineer\",\n    period: \"2022 - Present\",\n    description: [\n      \"Built complete web applications for enterprise clients, handling both user interfaces and backend systems.\",\n      \"Developed scalable applications that can handle thousands of users and growing business needs.\",\n      \"Created data-driven solutions with efficient database design and API integrations.\",\n      \"Implemented automated deployment processes and CI/CD pipelines, improving system reliability by 40%.\",\n      \"Led cross-functional teams using agile methodologies, consistently delivering projects ahead of schedule.\"\n    ],\n    skills: [\"Python\", \"Django\", \"Java\", \"Spring Boot\", \"React\", \"TypeScript\", \"AWS\", \"Docker\", \"PostgreSQL\", \"CI/CD\"]\n  },\n  {\n    company: \"Apple\",\n    logo: (\n      <svg viewBox=\"0 0 384 512\" className=\"w-full h-full\">\n        <path fill=\"currentColor\" d=\"M318.7 268.7c-.2-36.7 16.4-64.4 50-84.8-18.8-26.9-47.2-41.7-84.7-44.6-35.5-2.8-74.3 20.7-88.5 20.7-15 0-49.4-19.7-76.4-19.7C63.3 141.2 4 184.8 4 273.5q0 39.3 14.4 81.2c12.8 36.7 59 126.7 107.2 125.2 25.2-.6 43-17.9 75.8-17.9 31.8 0 48.3 17.9 76.4 17.9 48.6-.7 90.4-82.5 102.6-119.3-65.2-30.7-61.7-90-61.7-91.9zm-56.6-164.2c27.3-32.4 24.8-61.9 24-72.5-24.1 1.4-52 16.4-67.9 34.9-17.5 19.8-27.8 44.3-25.6 71.9 26.1 2 49.9-11.4 69.5-34.3z\"/>\n      </svg>\n    ),\n    role: \"Apple Support College Program\",\n    period: \"2023 - Present\",\n    description: [\n      \"Provided personalized technical support to customers, resolving complex issues across iOS, macOS, and Apple hardware.\",\n      \"Streamlined troubleshooting processes, reducing average resolution time by 30%.\",\n      \"Maintained high customer satisfaction ratings through empathetic communication and problem-solving.\",\n      \"Collaborated with Apple teams to report software and hardware bugs, contributing to continuous product improvement.\"\n    ],\n    skills: [\"Technical Support\", \"Problem Solving\", \"iOS\", \"macOS\", \"Automation\", \"Customer Success\"]\n  },\n  {\n    company: \"UTSA Research\",\n    logo: (\n      <svg viewBox=\"0 0 640 512\" className=\"w-full h-full\">\n        <path fill=\"currentColor\" d=\"M320 32c-8.1 0-16.1 1.4-23.7 4.1L15.8 137.4C6.3 140.9 0 149.9 0 160s6.3 19.1 15.8 22.6l57.9 20.9C57.3 229.3 48 259.8 48 291.9v28.1c0 28.4-10.8 57.7-22.3 80.8c-6.5 13-13.9 25.8-22.5 37.6C0 442.7-.9 448.3 .9 453.4s6 8.9 11.2 10.2l64 16c4.2 1.1 8.7 .3 12.4-2s6.3-6.1 7.1-10.4c8.6-42.8 4.3-81.2-2.1-108.7C90.3 344.3 86 329.8 80 316.5V291.9c0-30.2 10.2-58.7 27.9-81.5c12.9-15.5 29.6-28 49.2-35.7l157-61.7c8.2-3.2 17.5 .8 20.7 9s-.8 17.5-9 20.7l-157 61.7c-12.4 4.9-23.3 12.4-32.2 21.6l159.6 57.6c7.6 2.7 15.6 4.1 23.7 4.1s16.1-1.4 23.7-4.1L624.2 182.6c9.5-3.4 15.8-12.5 15.8-22.6s-6.3-19.1-15.8-22.6L343.7 36.1C336.1 33.4 328.1 32 320 32zM128 408c0 35.3 86 72 192 72s192-36.7 192-72L496.7 262.6 354.5 314c-11.1 4-22.8 6-34.5 6s-23.5-2-34.5-6L143.3 262.6 128 408z\"/>\n      </svg>\n    ),\n    role: \"Research Assistant\",\n    period: \"2023 - 2024\",\n    description: [\n      \"Researched mobile device security, identifying potential data leaks in Android applications.\",\n      \"Created automated tools that improved detection efficiency by 30%, saving significant research time.\",\n      \"Collaborated with university faculty to design experiments and analyze security data.\",\n      \"Presented research findings to academic audiences, effectively communicating complex security concepts.\"\n    ],    \n    skills: [\"Research\", \"Python\", \"Data Security\", \"Automation\", \"Data Analysis\", \"Android\", \"Scientific Writing\", \"Problem Solving\"]\n  }\n];\n\nconst ExperienceButton = memo(({ \n  experience, \n  isActive, \n  onClick \n}: { \n  experience: Experience; \n  isActive: boolean; \n  onClick: () => void;\n}) => (\n  <motion.button\n    onClick={onClick}\n    initial={false}\n    layout\n    className=\"w-full text-left group relative\"\n  >\n    <div className={`relative px-8 py-6 rounded-xl transition-all duration-300 ${\n      isActive \n        ? 'bg-gradient-to-r from-slate-900 to-slate-800 shadow-xl' \n        : 'bg-white hover:bg-slate-50'\n    }`}>\n      <div className=\"flex items-center gap-5\">\n        <div className={`w-14 h-14 rounded-lg flex items-center justify-center p-3 transition-colors duration-300 ${\n          isActive ? 'bg-slate-800 text-white' : 'bg-slate-100 text-slate-400 group-hover:bg-slate-200'\n        }`}>\n          {experience.logo}\n        </div>\n        <div>\n          <h3 className={`font-semibold transition-colors duration-300 ${\n            isActive ? 'text-white' : 'text-slate-700 group-hover:text-slate-900'\n          }`}>\n            {experience.company}\n          </h3>\n          <p className={`text-sm transition-colors duration-300 ${\n            isActive ? 'text-slate-400' : 'text-slate-500'\n          }`}>\n            {experience.period}\n          </p>\n        </div>\n      </div>\n      {/* Blue Line Indicator */}\n      {isActive && (\n        <div\n          className=\"absolute -left-1 top-1/2 -translate-y-1/2 w-1 h-16 bg-gradient-to-b from-blue-400 to-indigo-600\"\n        />\n      )}\n    </div>\n  </motion.button>\n));\n\n\nconst ExperienceDetails = memo(({ experience }: { experience: Experience }) => (\n  <div className=\"relative bg-white rounded-xl p-8 h-full\">\n    <div className=\"mb-8\">\n      <div className=\"inline-flex items-center px-4 py-2 rounded-full border border-slate-200 mb-6\">\n        <div className=\"w-6 h-6 text-slate-600 mr-2\">\n          {experience.logo}\n        </div>\n        <span className=\"text-sm font-medium text-slate-700\">{experience.company}</span>\n      </div>\n      <h3 className=\"text-3xl font-bold text-slate-900 mb-3\">\n        {experience.role}\n      </h3>\n      <p className=\"text-blue-600 font-medium\">\n        {experience.period}\n      </p>\n    </div>\n\n    <div className=\"space-y-5 mb-10\">\n      {experience.description.map((item, index) => (\n        <div \n          key={index}\n          className=\"flex items-start gap-4\"\n        >\n          <div className=\"w-2 h-2 rounded-full mt-2 bg-gradient-to-r from-blue-600 to-indigo-600\"/>\n          <p className=\"text-slate-600 leading-relaxed\">{item}</p>\n        </div>\n      ))}\n    </div>\n\n    <div>\n      <h4 className=\"text-lg font-semibold text-slate-900 mb-4\">\n        Key Technologies\n      </h4>\n      <div className=\"flex flex-wrap gap-2\">\n        {experience.skills.map((skill, index) => (\n          <span\n            key={index}\n            className=\"px-4 py-2 rounded-lg text-sm font-medium bg-slate-100 text-slate-700 hover:bg-slate-200 transition-colors duration-200\"\n          >\n            {skill}\n          </span>\n        ))}\n      </div>\n    </div>\n  </div>\n));\n\nconst ExperienceSection = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleExperienceClick = useCallback((index: number) => {\n    setActiveIndex(index);\n  }, []);\n\n  return (\n    <section id=\"experience\" className=\"relative py-32 bg-slate-50 overflow-hidden\">\n      {/* Refined Background */}\n      <div className=\"absolute inset-0 pointer-events-none\">\n        <div \n          className=\"absolute inset-0 opacity-[0.03]\"\n          style={{\n            backgroundImage: 'radial-gradient(circle at 1px 1px, rgb(51 65 85) 1px, transparent 0)',\n            backgroundSize: '48px 48px',\n          }}\n        />\n        <div className=\"absolute -top-40 -right-40 w-[800px] h-[800px] bg-gradient-to-br from-blue-50 to-indigo-50 rounded-full opacity-70 blur-3xl\"/>\n        <div className=\"absolute -bottom-40 -left-40 w-[800px] h-[800px] bg-gradient-to-br from-slate-50 to-blue-50 rounded-full opacity-70 blur-3xl\"/>\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Refined Header */}\n        <div className=\"text-center max-w-3xl mx-auto mb-24\">\n          <h2 className=\"text-sm font-semibold text-blue-600 tracking-wider uppercase mb-3\">\n            Professional Journey\n          </h2>\n          <h3 className=\"text-4xl font-bold text-slate-900 sm:text-5xl mb-6\">\n            Experience & Achievements\n          </h3>\n          <div className=\"w-20 h-1.5 bg-gradient-to-r from-blue-600 to-indigo-600 mx-auto rounded-full\" />\n        </div>\n\n        <div className=\"grid lg:grid-cols-[400px,1fr] gap-8 lg:gap-16\">\n          <div className=\"space-y-3\">\n            {experiences.map((exp, index) => (\n              <ExperienceButton\n                key={exp.company}\n                experience={exp}\n                isActive={activeIndex === index}\n                onClick={() => handleExperienceClick(index)}\n              />\n            ))}\n          </div>\n\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={activeIndex}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -20 }}\n              transition={{ duration: 0.3 }}\n              className=\"relative rounded-xl shadow-xl shadow-slate-200/50 border border-slate-200/80\"\n            >\n              <ExperienceDetails experience={experiences[activeIndex]} />\n            </motion.div>\n          </AnimatePresence>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(ExperienceSection);","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["experiences","company","logo","_jsx","viewBox","className","children","fill","d","role","period","description","skills","ExperienceButton","memo","_ref","experience","isActive","onClick","motion","button","initial","layout","_jsxs","ExperienceDetails","_ref2","map","item","index","skill","ExperienceSection","activeIndex","setActiveIndex","useState","handleExperienceClick","useCallback","id","style","backgroundImage","backgroundSize","exp","AnimatePresence","mode","div","opacity","y","animate","exit","transition","duration","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","exitBeforeEnter","invariant","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete"],"sourceRoot":""}