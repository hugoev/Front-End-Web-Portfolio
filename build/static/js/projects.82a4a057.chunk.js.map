{"version":3,"file":"static/js/projects.82a4a057.chunk.js","mappings":"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","sources":["components/ProjectsSection.tsx","../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs"],"sourcesContent":["import { LazyMotion, domAnimation, motion } from 'framer-motion';\nimport React, { memo } from 'react';\n\n// Types\ninterface Project {\n  title: string;\n  description: string;\n  tech: string[];\n  status: 'coming-soon' | 'live';\n  link?: string;\n  category: 'Web App' | 'Mobile App' | 'Desktop App' | 'Systems';\n}\n\n// Animation variants\nconst containerVariants = {\n  hidden: { opacity: 0 },\n  visible: {\n    opacity: 1,\n    transition: {\n      staggerChildren: 0.1,\n      delayChildren: 0.2\n    }\n  }\n};\n\nconst cardVariants = {\n  hidden: { opacity: 0, y: 20 },\n  visible: { \n    opacity: 1, \n    y: 0,\n    transition: {\n      type: \"spring\",\n      stiffness: 100,\n      damping: 20\n    }\n  }\n};\n\n// Components\nconst CategoryBadge = memo(({ category }: { category: Project['category'] }) => {\n  const colors = {\n    'Web App': 'from-blue-400/10 to-blue-500/10 text-blue-600 border-blue-200',\n    'Mobile App': 'from-purple-400/10 to-purple-500/10 text-purple-600 border-purple-200',\n    'Desktop App': 'from-emerald-400/10 to-emerald-500/10 text-emerald-600 border-emerald-200',\n    'Systems': 'from-orange-400/10 to-orange-500/10 text-orange-600 border-orange-200'\n  };\n\n  return (\n    <span className={`\n      text-xs font-medium px-3 py-1.5 \n      bg-gradient-to-r ${colors[category]}\n      rounded-full border\n    `}>\n      {category}\n    </span>\n  );\n});\n\nconst TechBadge = memo(({ name }: { name: string }) => (\n  <div className=\"flex items-center gap-1.5\">\n    <div className=\"w-1.5 h-1.5 rounded-full bg-blue-500\" />\n    <span className=\"text-sm text-gray-600\">\n      {name}\n    </span>\n  </div>\n));\n\nconst LiveBadge = memo(() => (\n  <div className=\"inline-flex items-center gap-1.5 px-3 py-1 rounded-full bg-green-50 border border-green-200\">\n    <span className=\"relative flex h-2 w-2\">\n      <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-green-400 opacity-75\" />\n      <span className=\"relative inline-flex rounded-full h-2 w-2 bg-green-500\" />\n    </span>\n    <span className=\"text-xs font-medium text-green-700\">Open Source</span>\n  </div>\n));\n\nconst ComingSoonBadge = memo(() => (\n  <div className=\"inline-flex items-center gap-1.5 px-3 py-1 rounded-full bg-amber-50 border border-amber-200\">\n    <span className=\"relative flex h-2 w-2\">\n      <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-amber-400 opacity-75\" />\n      <span className=\"relative inline-flex rounded-full h-2 w-2 bg-amber-500\" />\n    </span>\n    <span className=\"text-xs font-medium text-amber-700\">Coming Soon</span>\n  </div>\n));\n\nconst ProjectCard = memo(({ project }: { project: Project }) => (\n  <motion.div\n    variants={cardVariants}\n    className=\"group relative flex flex-col bg-white rounded-2xl transition-all duration-300 hover:shadow-xl\"\n  >\n    {/* Card Header */}\n    <div className=\"relative px-6 pt-6\">\n      <div className=\"flex items-start justify-between gap-4\">\n        <CategoryBadge category={project.category} />\n        {project.status === 'live' ? <LiveBadge /> : <ComingSoonBadge />}\n      </div>\n      <h3 className=\"mt-4 text-xl font-bold text-gray-900\">\n        {project.title}\n      </h3>\n      <p className=\"mt-2 text-gray-600 line-clamp-2\">\n        {project.description}\n      </p>\n    </div>\n\n    {/* Tech Stack */}\n    <div className=\"px-6 mt-6\">\n      <div className=\"flex flex-wrap gap-3\">\n        {project.tech.map(tech => (\n          <TechBadge key={tech} name={tech} />\n        ))}\n      </div>\n    </div>\n\n    {/* Card Footer */}\n    <div className=\"mt-auto px-6 py-6 border-t border-gray-100\">\n      <a\n        href={project.link}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"inline-flex items-center text-sm font-medium text-blue-600 hover:text-blue-700 transition-colors group/link\"\n      >\n        View Repository\n        <svg \n          className=\"ml-2 w-4 h-4 transform transition-transform group-hover/link:translate-x-0.5\" \n          fill=\"none\" \n          stroke=\"currentColor\" \n          viewBox=\"0 0 24 24\"\n        >\n          <path \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\" \n            strokeWidth={2} \n            d=\"M17 8l4 4m0 0l-4 4m4-4H3\" \n          />\n        </svg>\n      </a>\n    </div>\n  </motion.div>\n));\n\n// Projects Data\nconst projects: Project[] = [\n  {\n    title: \"Kestrel\",\n    description: \"High-performance TCP load balancer in Rust with configurable algorithms.\",\n    tech: [\"Rust\", \"Tokio\", \"Async\", \"TCP\"],\n    status: 'live',\n    link: \"https://github.com/hugoev/Kestrel\",\n    category: 'Systems'\n  },\n  {\n    title: \"Flow\",\n    description: \"Real-time IoT platform for vehicle sensor data with microservices.\",\n    tech: [\"Angular\", \"Spring Boot\", \"Kafka\", \"IoT\"],\n    status: 'live',\n    link: \"https://github.com/hugoev/Flow\",\n    category: 'Web App'\n  },\n  {\n    title: \"Notes\",\n    description: \"Full-stack notes app with infinite scrolling and real-time updates.\",\n    tech: [\"Next.js\", \"Django\", \"PostgreSQL\", \"JWT\"],\n    status: 'live',\n    link: \"https://github.com/hugoev/Notes\",\n    category: 'Web App'\n  },\n  {\n    title: \"Lumo\",\n    description: \"Project management tool with Kanban boards and team collaboration.\",\n    tech: [\"ASP.NET Core\", \"Vue 3\", \"Kanban\", \"Project Management\"],\n    status: 'live',\n    link: \"https://github.com/hugoev/Lumo\",\n    category: 'Web App'\n  }\n];\n\n// Main Section Component\nconst ProjectsSection: React.FC = () => {\n  return (\n    <LazyMotion features={domAnimation}>\n      <section id=\"projects\" className=\"relative overflow-hidden bg-gray-50 py-24 sm:py-32\">\n        <div className=\"absolute inset-0 bg-gradient-to-b from-white to-transparent\" />\n        \n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          {/* Section Header */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            viewport={{ once: true }}\n            transition={{ duration: 0.5 }}\n            className=\"text-center max-w-3xl mx-auto mb-16\"\n          >\n            <h2 className=\"text-base font-semibold text-blue-600 mb-3\">\n              PORTFOLIO\n            </h2>\n            <h3 className=\"text-3xl font-bold text-gray-900 sm:text-4xl mb-4\">\n              Featured Projects\n            </h3>\n            <p className=\"text-gray-600\">\n              Explore a collection of my recent work and ongoing developments,\n              showcasing expertise in web applications, mobile development, and user experience design.\n            </p>\n          </motion.div>\n\n          {/* Projects Grid */}\n          <motion.div\n            variants={containerVariants}\n            initial=\"hidden\"\n            whileInView=\"visible\"\n            viewport={{ once: true, margin: \"-50px\" }}\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          >\n            {projects.map((project) => (\n              <ProjectCard key={project.title} project={project} />\n            ))}\n          </motion.div>\n\n          {/* View All Projects Link */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            viewport={{ once: true }}\n            transition={{ delay: 0.5 }}\n            className=\"mt-12 text-center\"\n          >\n            <a\n              href=\"https://github.com/hugoev\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex items-center gap-2 text-blue-600 hover:text-blue-700 font-medium transition-colors\"\n            >\n              View All Projects\n              <svg \n                className=\"w-4 h-4\" \n                fill=\"none\" \n                viewBox=\"0 0 24 24\" \n                stroke=\"currentColor\"\n              >\n                <path \n                  strokeLinecap=\"round\" \n                  strokeLinejoin=\"round\" \n                  strokeWidth={2} \n                  d=\"M17 8l4 4m0 0l-4 4m4-4H3\" \n                />\n              </svg>\n            </a>\n          </motion.div>\n        </div>\n      </section>\n    </LazyMotion>\n  );\n};\n\nexport default memo(ProjectsSection);","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n"],"names":["containerVariants","hidden","opacity","visible","transition","staggerChildren","delayChildren","cardVariants","y","type","stiffness","damping","CategoryBadge","memo","_ref","category","_jsx","className","children","TechBadge","_ref2","name","_jsxs","LiveBadge","ComingSoonBadge","ProjectCard","_ref3","project","motion","div","variants","status","title","description","tech","map","href","link","target","rel","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","projects","ProjectsSection","LazyMotion","features","domAnimation","id","initial","whileInView","viewport","once","duration","margin","delay","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","undefined","renderer","loadedFeatures","current","loadFeatures","useEffect","then","jsx","LazyContext","Provider","value","createDomVisualElement","animations","gestureAnimations"],"sourceRoot":""}