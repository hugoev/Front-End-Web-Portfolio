{"version":3,"file":"static/js/159.37e8bde7.chunk.js","mappings":"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","sources":["components/Navbar.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nconst Navbar: React.FC = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [activeSection, setActiveSection] = useState('home');\n\n  // Handle scroll locking\n  useEffect(() => {\n    const body = document.body;\n    const html = document.documentElement;\n\n    if (isMobileMenuOpen) {\n      const scrollbarWidth = window.innerWidth - body.clientWidth;\n      body.style.position = 'fixed';\n      body.style.top = `-${window.scrollY}px`;\n      body.style.width = '100%';\n      body.style.paddingRight = `${scrollbarWidth}px`;\n      html.style.overflow = 'hidden';\n    } else {\n      const scrollY = body.style.top;\n      body.style.position = '';\n      body.style.top = '';\n      body.style.width = '';\n      body.style.paddingRight = '';\n      html.style.overflow = '';\n      window.scrollTo(0, parseInt(scrollY || '0') * -1);\n    }\n  }, [isMobileMenuOpen]);\n\n  const handleScroll = useCallback(() => {\n    setIsScrolled(window.scrollY > 20);\n  }, []);\n\n  const handleSectionVisibility = useCallback(() => {\n    const sections = ['home', 'about', 'projects', 'experience', 'contact'];\n    const current = sections.find(section => {\n      const element = document.getElementById(section);\n      if (element) {\n        const rect = element.getBoundingClientRect();\n        return rect.top <= 100 && rect.bottom >= 100;\n      }\n      return false;\n    });\n    if (current) setActiveSection(current);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll, { passive: true });\n    window.addEventListener('scroll', handleSectionVisibility, { passive: true });\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('scroll', handleSectionVisibility);\n    };\n  }, [handleScroll, handleSectionVisibility]);\n\n  const navLinks = [\n    { name: 'Home', href: '#home' },\n    { name: 'About', href: '#about' },\n    { name: 'Projects', href: '#projects' },\n    { name: 'Experience', href: '#experience' },\n    { name: 'Contact', href: '#contact' }\n  ];\n\n  const handleNavClick = useCallback((href: string) => {\n    setIsMobileMenuOpen(false);\n    const element = document.querySelector(href);\n    if (element) {\n      // Small delay to allow scroll unlocking\n      setTimeout(() => {\n        element.scrollIntoView({ behavior: 'smooth' });\n      }, 10);\n    }\n  }, []);\n\n  return (\n    <>\n      {/* Desktop Navbar */}\n      <nav \n        className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n          isScrolled ? 'py-4' : 'py-6'\n        }`}\n      >\n        {/* Backdrop */}\n        <div \n          className={`absolute inset-0 transition-all duration-300 ${\n            isScrolled ? 'bg-white/90 backdrop-blur-md shadow-sm' : 'bg-transparent'\n          }`} \n        />\n\n        {/* Content */}\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\">\n            {/* Logo */}\n            <a href=\"#home\" className=\"group flex items-center space-x-2\">\n              <div className=\"relative w-10 h-10\">\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-blue-400 rounded-xl blur-sm opacity-75 group-hover:opacity-100 transition duration-300\" />\n                <div className=\"relative w-full h-full bg-white rounded-xl flex items-center justify-center text-blue-600 font-bold border border-blue-100\">\n                  H\n                </div>\n              </div>\n              <span className=\"text-gray-900 font-medium\">Hugo</span>\n            </a>\n\n            {/* Desktop Navigation */}\n            <div className=\"hidden md:flex items-center justify-center flex-1 mx-8\">\n              {navLinks.map((link) => (\n                <button\n                  key={link.name}\n                  onClick={() => handleNavClick(link.href)}\n                  className=\"relative px-4 py-2 group\"\n                >\n                  <span className={`relative z-10 transition-colors duration-300 ${\n                    activeSection === link.href.substring(1)\n                      ? 'text-blue-600'\n                      : 'text-gray-600 group-hover:text-gray-900'\n                  }`}>\n                    {link.name}\n                  </span>\n                  \n                  <div className={`absolute inset-0 transition-all duration-300 ${\n                    activeSection === link.href.substring(1)\n                      ? 'bg-blue-50 rounded-xl'\n                      : 'bg-transparent group-hover:bg-gray-50 rounded-xl'\n                  }`} />\n                </button>\n              ))}\n            </div>\n\n            <div className=\"w-10 h-10 hidden md:block\" />\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"md:hidden relative w-10 h-10 flex items-center justify-center\"\n              aria-label=\"Toggle menu\"\n            >\n              <div className={`absolute w-5 h-0.5 bg-blue-600 transition-all duration-300 transform-gpu ${\n                isMobileMenuOpen ? 'rotate-45' : '-translate-y-1.5'\n              }`} />\n              <div className={`absolute w-5 h-0.5 bg-blue-600 transition-all duration-300 transform-gpu ${\n                isMobileMenuOpen ? '-rotate-45' : 'translate-y-1.5'\n              }`} />\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Menu */}\n      <div \n        className={`fixed inset-0 z-40 transition-all duration-300 transform-gpu ${\n          isMobileMenuOpen ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'\n        }`}\n        aria-hidden={!isMobileMenuOpen}\n      >\n        <div className=\"absolute inset-0 bg-white/95 backdrop-blur-xl\" />\n        <div className=\"relative h-full flex flex-col items-center justify-center -translate-y-20 space-y-8 p-4\">\n          {navLinks.map((link) => (\n            <button\n              key={link.name}\n              onClick={() => handleNavClick(link.href)}\n              className={`text-2xl font-light transition-colors duration-300 ${\n                activeSection === link.href.substring(1)\n                  ? 'text-blue-600'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              {link.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;"],"names":["Navbar","isScrolled","setIsScrolled","useState","isMobileMenuOpen","setIsMobileMenuOpen","activeSection","setActiveSection","useEffect","body","document","html","documentElement","scrollbarWidth","window","innerWidth","clientWidth","style","position","top","scrollY","width","paddingRight","overflow","scrollTo","parseInt","handleScroll","useCallback","handleSectionVisibility","current","find","section","element","getElementById","rect","getBoundingClientRect","bottom","addEventListener","passive","removeEventListener","navLinks","name","href","handleNavClick","querySelector","setTimeout","scrollIntoView","behavior","_jsxs","_Fragment","children","className","_jsx","map","link","onClick","substring"],"sourceRoot":""}