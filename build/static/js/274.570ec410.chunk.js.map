{"version":3,"file":"static/js/274.570ec410.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.17\", `Attempting to mix Motion versions ${nextValue.version} with 11.11.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","const noop = (any) => any;\n\nexport { noop };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","length","transformProps","has","startsWith","Math","sqrt","instantAnimationState","isNotNull","value","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","undefined","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","noop","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","i","abs","binarySubdivide","backOut","backIn","reverseEasing","backInOut","mirrorEasing","anticipate","p","pow","isGenerator","isAnimatable","name","Array","isArray","complex","test","canAnimate","velocity","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","current","hasKeyframesChanged","BaseAnimation","constructor","autoplay","delay","repeatDelay","options","this","isStopped","hasAttemptedResolve","createdAt","time","now","updateFinishedPromise","calcStartTime","resolvedAt","resolved","_resolved","flushKeyframeResolvers","onKeyframesResolved","onComplete","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","calcGeneratorVelocity","resolveValue","prevT","max","velocityPerSecond","safeMin","findSpring","envelope","derivative","bounce","mass","secondsToMilliseconds","dampingRatio","clamp","millisecondsToSeconds","undampedFreq","exponentialDecay","delta","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","keys","some","key","spring","restDelta","origin","target","state","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","sin","cos","dampedAngularFreq","freqForT","min","sinh","cosh","calculatedDuration","next","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","v","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easing","easingLookup","linear","circIn","circInOut","circOut","easingDefinitionToFunction","definition","invariant","x1","y1","x2","y2","hueToRgb","q","mixImmediate","mixLinearColor","from","to","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","color","find","Boolean","model","parse","hue","saturation","lightness","alpha","red","green","blue","round","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixNumber","transform","invisibleValues","Set","mixNumber$1","getMixer","isCSSVariableToken","mixComplex","mixArray","mixObject","output","numValues","blendValue","map","template","createTransformer","originStats","analyseComplexValue","targetStats","indexes","var","number","values","mixVisibility","pipe","_a","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","arguments","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","push","createMixers","interpolator","progressInRange","progress","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","update","passTimestamp","timestamp","start","frame","stop","cancelFrame","frameData","isProcessing","generators","decay","tween","percentToProgress","percent","MainThreadAnimation","super","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","resolver","cancel","teardown","onStop","motionValue","element","KeyframeResolver$1","KeyframeResolver","onResolved","scheduleResolve","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","newTime","driver","newSpeed","hasChanged","isScheduled","resume","onPlay","complete","stopDriver","acceleratedValues","memo","callback","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","substring","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","DOMKeyframesResolver","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","fill","iterations","direction","startWaapiAnimation","pendingTimeline","set","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","getProps","supportsScrollTimeline","window","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","fallback","subscriptions","forEach","methodName","controls","animateMotionValue","transition","isHandoff","valueTransition","getValueTransition","getVelocity","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","MotionGlobalConfig","skipAnimations","get","optimizedAppearDataAttribute","camelToDash","getOptimisedAppearId","visualElement","props","isAnimationControls","isKeyframesTarget","LayoutGroupContext","createContext","LazyContext","strict","MotionConfigContext","transformPagePoint","isStatic","reducedMotion","PresenceContext","acos","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","extractEventInfo","event","pointType","point","y","isPrimaryPointer","pointerType","button","isPrimary","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","step","schedule","queue","add","delete","process","clear","createRenderStep","read","resolveKeyframes","preRender","render","postRender","processBatch","useManualTiming","performance","keepAlive","immediate","frameSteps","requestAnimationFrame","clearTime","queueMicrotask","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","shallowCompare","prev","prevLength","resolveVariant","custom","resolveVariantFromProps","setMotionValue","hasValue","getValue","addValue","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","addValueToWillChange","shouldReduceMotion","resolveFinalValueInKeyframes","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","variantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","isVariantLabel","reversePriorityOrder","variantPriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","AnimationFeature","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","featureProps","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","addHoverEvent","callbackName","handleEvent","info","HoverGesture","FocusGesture","onFocus","isFocusVisible","matches","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","gestureAnimations","loadFeatures","features","isForcedMotionValue","layoutId","scaleCorrectors","convertBoundingBoxToBox","top","left","right","bottom","convertBoxToBoundingBox","_ref2","transformBoxPoints","transformPoint","topLeft","bottomRight","scalePoint","scale","originPoint","applyPointDelta","translate","boxScale","applyAxisDelta","axis","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","applyTreeDeltas","treeScale","treePath","isSharedTransition","treeLength","projectionDelta","style","display","layoutScroll","scroll","transformBox","hasTransform","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","scaleX","originX","scaleY","originY","createDelta","createBox","addScaleCorrector","correctors","isIdentityScale","hasScale","has2DTranslate","z","rotate","rotateX","rotateY","skewX","skewY","is2DTranslate","measureViewportBox","instance","getBoundingClientRect","measurePageBox","rootProjectionNode","viewportBox","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","_target","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","calcAxisDelta","source","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","eachAxis","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","measuredConstraints","calcViewportConstraints","userConstraints","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","DragGesture","removeGroupControls","dragControls","asyncHandler","PanGesture","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","original","shadow","xScale","yScale","averageScale","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","depth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","isMotionValue","isCustomValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","rotateZ","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","toLowerCase","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","ProjectionNode","MotionContext","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","onMount","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isVariantNode","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","vars","createSvgRenderState","attrs","svgMotionConfig","dimensions","getBBox","width","height","buildSVGAttrs","isSVGTag","renderSVG","htmlMotionConfig","copyRawValuesOnly","useStyle","buildHTMLStyles","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","isSVGComponent","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","motion","createDomVisualElement","splitCSSVariableRegex","getVariableValue","token","match","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","trim","isNumericalString","invalidTemplates","unresolvedKeyframes","readKeyframes","keyframe","resolveNoneKeyframes","positionalKeys","originType","findDimensionValueType","targetType","isNumOrPxType","noneKeyframeIndexes","isZeroValueString","animatableTemplate","noneIndex","getAnimatableNone","makeNoneKeyframesAnimatable","measureInitialState","suspendedScrollY","pageYOffset","measuredOrigin","positionalValues","measureKeyframe","jump","measureEndState","finalKeyframeIndex","removedTransforms","unsetTransformName","unsetTransformValue","visualElementStore","valueTypes","dimensionValueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","willChange","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","hasReducedMotionListener","initPrefersReducedMotion","prefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","variants","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","defaultValue","readValue","getBaseTargetFromProps","readValueFromInstance","testValueType","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","renderHTML","defaultType","getDefaultValueType","computedStyle","isCSSVariableName","childSubscription","textContent","SVGVisualElement","camelCaseAttributes","getAttribute","str","replace","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","split","lowercaseSVGElements","indexOf","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","removeNonTranslationalTransform","_ref3","paddingLeft","paddingRight","_ref4","_ref5","paddingTop","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","defaultValueType","defaultValueTypes","numberValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","degrees","vw","vh","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","scaleZ","skew","translateZ","perspective","progressPercentage","originZ","int","zIndex","fillOpacity","strokeOpacity","numOctaves","getValueAsType","translateAlias","numTransforms","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","setProperty","newValues","dashKeys","array","camelKeys","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","_styleProp","setAttribute","scrapeMotionValuesFromProps$1","charAt","toResolve","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","elementsToMeasure","transformsToRestore","restore","scrollTo","readAllKeyframes","isAsync","isComplete","currentValue","valueAsRead","setFinalKeyframe","renderEndStyles","getValueState","item","any","combineFunctions","transformers","toFromDifference","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","numSubscriptions","getSize","seconds","milliseconds","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","rgbUnit","clampRgbUnit","singleColorRegex","testProp","isNullish","aName","bName","cName","floatRegex","maxDefaults","applyDefaultFilter","slice","unit","functionRegex","functions","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","toString","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith"],"sourceRoot":""}