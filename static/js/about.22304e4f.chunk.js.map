{"version":3,"file":"static/js/about.22304e4f.chunk.js","mappings":"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","sources":["components/AboutSection.tsx","../node_modules/framer-motion/dist/es/value/use-motion-value.mjs","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["import React, { memo, useCallback, useEffect, useRef } from 'react';\nimport { motion, useMotionValue, useInView } from 'framer-motion';\n\n// Memoized static components\nconst BackgroundGrid = memo(() => (\n  <div className=\"absolute inset-0\">\n    <div \n      className=\"absolute inset-0 opacity-[0.03]\"\n      style={{\n        backgroundImage: \n          `linear-gradient(to right, rgba(37, 99, 235, 0.1) 1px, transparent 1px),\n           linear-gradient(to bottom, rgba(37, 99, 235, 0.1) 1px, transparent 1px)`,\n        backgroundSize: '40px 40px',\n      }}\n    />\n  </div>\n));\n\nconst SectionHeader = memo(() => (\n  <div className=\"text-center mb-20\">\n    <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">About Me</h2>\n    <div className=\"h-1 w-20 bg-blue-600 mx-auto rounded-full mb-6\" />\n  </div>\n));\n\nconst JourneyCard = memo(() => (\n  <div className=\"relative group\">\n    <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-600 to-blue-400 rounded-lg opacity-50 blur\" />\n    <div className=\"relative p-6 bg-white rounded-lg border border-blue-100\">\n      <h3 className=\"text-xl font-semibold text-blue-600 mb-4\">My Journey</h3>\n      <p className=\"text-gray-600 leading-relaxed\">\n        Passionate software engineer with experience in building intuitive web applications \n        and solving complex technical challenges. Specializing in modern web technologies \n        and full-stack development, I focus on creating efficient, scalable solutions that \n        deliver exceptional user experiences.\n      </p>\n    </div>\n  </div>\n));\n\ninterface StatCardProps {\n  value: string;\n  label: string;\n}\n\nconst StatCard = memo(({ value, label }: { value: string; label: string }) => (\n  <div className=\"relative group\">\n    {/* Make sure gradient is consistent across devices */}\n    <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-600 to-blue-400 rounded-lg opacity-50 blur transition-opacity duration-300\" />\n    <div className=\"relative p-6 bg-white rounded-lg border border-blue-100\">\n      <div className=\"text-3xl font-bold text-gray-900 mb-2\">\n        {value}\n      </div>\n      <div className=\"text-gray-600\">{label}</div>\n    </div>\n  </div>\n));\n\ninterface TechCategoryProps {\n  title: string;\n  items: string[];\n}\n\nconst TechCategory = memo(({ title, items }: TechCategoryProps) => (\n  <div className=\"space-y-3 transform-gpu\">\n    <h4 className=\"text-gray-900 font-medium\">{title}</h4>\n    <div className=\"grid grid-cols-2 gap-3\">\n      {items.map((item) => (\n        <div key={item} className=\"flex items-center space-x-2\">\n          <div className=\"w-1.5 h-1.5 rounded-full bg-blue-500\" />\n          <span className=\"text-gray-600\">{item}</span>\n        </div>\n      ))}\n    </div>\n  </div>\n));\n\n// Static data\nconst stats = [\n  { value: \"3+\", label: \"Years Experience\" },\n  { value: \"100k+\", label: \"Lines of Code   \" },\n];\n\nconst technologies = [\n  {\n    title: \"Frontend Development\",\n    items: [\"React\", \"TypeScript\", \"Next.js\", \"TailwindCSS\"]\n  },\n  {\n    title: \"Backend & Infrastructure\",\n    items: [\"Node.js\", \"AWS\", \"PostgreSQL\", \"Docker\"]\n  }\n];\n\nconst AboutSection: React.FC = () => {\n  const ref = useRef<HTMLDivElement>(null);\n  const isInView = useInView(ref, { once: true, amount: 0.2 });\n  const y = useMotionValue(20);\n\n  useEffect(() => {\n    if (isInView) {\n      y.set(0);\n    }\n  }, [isInView, y]);\n\n  return (\n    <section\n      ref={ref}\n      id=\"about\"\n      className=\"relative min-h-screen bg-white py-24 overflow-hidden will-change-transform\"\n    >\n      <BackgroundGrid />\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: isInView ? 1 : 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"transform-gpu\"\n        >\n          <SectionHeader />\n\n          <div className=\"grid lg:grid-cols-2 gap-12\">\n            {/* Personal Introduction */}\n            <div className=\"space-y-6 transform-gpu\">\n              <JourneyCard />\n\n              {/* Key Metrics */}\n              <div className=\"grid grid-cols-2 gap-6\">\n                {stats.map((stat) => (\n                  <StatCard key={stat.label} {...stat} />\n                ))}\n              </div>\n            </div>\n            \n            {/* Technical Expertise */}\n            <div className=\"relative group transform-gpu\">\n              <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-600 to-blue-400 rounded-lg opacity-50 blur\" />\n              <div className=\"relative p-8 bg-white rounded-lg border border-blue-100\">\n                <h3 className=\"text-xl font-semibold text-blue-600 mb-6\">Core Technologies</h3>\n                <div className=\"space-y-6\">\n                  {technologies.map((category) => (\n                    <TechCategory key={category.title} {...category} />\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(AboutSection);","import { useContext, useState, useEffect } from 'react';\nimport { motionValue } from './index.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates a `MotionValue` to track the state and velocity of a value.\n *\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\n *\n * ```jsx\n * export const MyComponent = () => {\n *   const scale = useMotionValue(1)\n *\n *   return <motion.div style={{ scale }} />\n * }\n * ```\n *\n * @param initial - The initial state.\n *\n * @public\n */\nfunction useMotionValue(initial) {\n    const value = useConstant(() => motionValue(initial));\n    /**\n     * If this motion value is being used in static mode, like on\n     * the Framer canvas, force components to rerender when the motion\n     * value is updated.\n     */\n    const { isStatic } = useContext(MotionConfigContext);\n    if (isStatic) {\n        const [, setLatest] = useState(initial);\n        useEffect(() => value.on(\"change\", setLatest), []);\n    }\n    return value;\n}\n\nexport { useMotionValue };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["BackgroundGrid","memo","_jsx","className","children","style","backgroundImage","backgroundSize","SectionHeader","_jsxs","JourneyCard","StatCard","_ref","value","label","TechCategory","_ref2","title","items","map","item","stats","technologies","AboutSection","ref","useRef","isInView","useInView","once","amount","y","initial","useConstant","motionValue","isStatic","useContext","MotionConfigContext","setLatest","useState","useEffect","on","useMotionValue","set","id","motion","div","opacity","animate","transition","duration","stat","category","thresholds","some","all","inView","elementOrSelector","onStart","root","margin","rootMargin","arguments","length","undefined","elements","scope","selectorCache","_a","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","target","isIntersecting","newOnEnd","unobserve","delete","threshold","element","observe","disconnect","setInView","options","onEnter"],"sourceRoot":""}