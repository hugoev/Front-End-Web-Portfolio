{"version":3,"file":"static/js/tech.f07d58d8.chunk.js","mappings":"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","sources":["components/TechStack.tsx","../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface Technology {\n  name: string;\n  level: 'Expert' | 'Advanced' | 'Proficient';\n  proficiency: number;\n  description: string;\n  icon: JSX.Element;\n  features: string[];\n}\n\ninterface CategoryData {\n  name: string;\n  description: string;\n  technologies: Technology[];\n}\n\nconst TechStackSection = () => {\n  const [selectedCategory, setSelectedCategory] = useState(0);\n\n  // Proficiency Circle Component\n  const ProficiencyCircle = ({ percentage }: { percentage: number }) => {\n    const circumference = 2 * Math.PI * 40;\n    const strokeDashoffset = circumference - (percentage / 100) * circumference;\n    const [isVisible, setIsVisible] = useState(false);\n    const circleRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n      const observer = new IntersectionObserver(\n        ([entry]) => {\n          if (entry.isIntersecting) {\n            setIsVisible(true);\n            observer.disconnect();\n          }\n        },\n        { threshold: 0.1 }\n      );\n\n      if (circleRef.current) {\n        observer.observe(circleRef.current);\n      }\n\n      return () => observer.disconnect();\n    }, []);\n\n    return (\n      <div ref={circleRef} className=\"relative w-24 h-24\">\n        <svg className=\"w-24 h-24 transform -rotate-90\">\n          <circle\n            cx=\"48\"\n            cy=\"48\"\n            r=\"40\"\n            className=\"stroke-current text-gray-100\"\n            strokeWidth=\"8\"\n            fill=\"transparent\"\n          />\n          <circle\n            cx=\"48\"\n            cy=\"48\"\n            r=\"40\"\n            className=\"stroke-current text-blue-600\"\n            strokeWidth=\"8\"\n            fill=\"transparent\"\n            strokeDasharray={circumference}\n            strokeDashoffset={isVisible ? strokeDashoffset : circumference}\n            style={{ transition: 'stroke-dashoffset 1s ease-in-out' }}\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-2xl font-bold text-gray-900\">{percentage}%</span>\n        </div>\n      </div>\n    );\n  };\n\n  const categories: CategoryData[] = [\n    {\n      name: \"Frontend Development\",\n      description: \"Modern web application development\",\n      technologies: [\n        {\n          name: \"React & Next.js\",\n          level: \"Expert\",\n          proficiency: 95,\n          description: \"Building scalable frontend applications with modern React patterns\",\n          features: [\n            \"Component Architecture\",\n            \"Performance Optimization\",\n            \"State Management\",\n            \"Server-Side Rendering\"\n          ],\n          icon: (\n            <svg viewBox=\"-11.5 -10.23174 23 20.46348\" className=\"w-full h-full\">\n              <circle r=\"2.05\" fill=\"currentColor\"/>\n              <g stroke=\"currentColor\" strokeWidth=\"1\" fill=\"none\">\n                <ellipse rx=\"11\" ry=\"4.2\"/>\n                <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(60)\"/>\n                <ellipse rx=\"11\" ry=\"4.2\" transform=\"rotate(120)\"/>\n              </g>\n            </svg>\n          )\n        },\n        {\n          name: \"TypeScript\",\n          level: \"Expert\",\n          proficiency: 92,\n          description: \"Type-safe development with advanced patterns\",\n          features: [\n            \"Type Systems\",\n            \"Modern Features\",\n            \"Code Organization\",\n            \"Build Tools\"\n          ],\n          icon: (\n            <svg viewBox=\"0 0 24 24\" className=\"w-full h-full\">\n              <path fill=\"currentColor\" d=\"M0 12v12h24V0H0zm19.341-.956c.61.152 1.074.423 1.501.865.221.236.549.666.575.77.008.03-1.036.73-1.668 1.123-.023.015-.115-.084-.217-.236-.31-.45-.633-.644-1.128-.678-.728-.05-1.196.331-1.192.967a.88.88 0 0 0 .102.45c.16.331.458.53 1.39.933 1.719.74 2.454 1.227 2.911 1.92.51.773.625 2.008.278 2.926-.38.998-1.325 1.676-2.655 1.9-.411.073-1.386.062-1.828-.018-.964-.172-1.878-.648-2.442-1.273-.221-.243-.652-.88-.625-.925.011-.016.11-.077.22-.141.108-.061.511-.294.892-.515l.69-.4.145.214c.202.308.643.731.91.872.766.404 1.817.347 2.335-.118a.883.883 0 0 0 .313-.72c0-.278-.035-.4-.18-.61-.186-.266-.567-.49-1.649-.96-1.238-.533-1.771-.864-2.259-1.39a3.165 3.165 0 0 1-.659-1.2c-.091-.339-.114-1.189-.042-1.531.255-1.197 1.158-2.03 2.461-2.278.423-.08 1.406-.05 1.821.053zm-5.634 1.002l.008.983H10.59v8.876H8.38v-8.876H5.258v-.964c0-.534.011-.98.026-.99.012-.016 1.913-.024 4.217-.02l4.195.012z\"/>\n            </svg>\n          )\n        }\n      ]\n    },\n    {\n      name: \"Backend Development\",\n      description: \"Server-side architecture and APIs\",\n      technologies: [\n        {\n          name: \"Node.js & Express\",\n          level: \"Expert\",\n          proficiency: 90,\n          description: \"Server-side JavaScript development with modern frameworks\",\n          features: [\n            \"RESTful APIs\",\n            \"GraphQL\",\n            \"Authentication\",\n            \"Microservices\"\n          ],\n          icon: (\n            <svg viewBox=\"0 0 256 282\" className=\"w-full h-full\">\n            <path fill=\"currentColor\" d=\"M116.504 3.58c6.962-3.985 16.03-4.003 22.986 0 34.995 19.774 70.001 39.517 104.99 59.303 6.581 3.707 10.983 11.031 10.916 18.614v118.968c.049 7.897-4.788 15.396-11.731 19.019-34.88 19.665-69.742 39.354-104.616 59.019-7.106 4.063-16.356 3.75-23.24-.646-10.457-6.062-20.932-12.094-31.39-18.15-2.137-1.274-4.546-2.288-6.055-4.36 1.334-1.798 3.719-2.022 5.657-2.807 4.365-1.388 8.374-3.616 12.384-5.778 1.014-.694 2.252-.428 3.224.193 8.942 5.127 17.805 10.403 26.777 15.481 1.914 1.105 3.852-.362 5.488-1.274 34.228-19.345 68.498-38.617 102.72-57.968 1.268-.61 1.969-1.956 1.866-3.345.024-39.245.006-78.497.012-117.742.145-1.576-.767-3.025-2.192-3.67-34.759-19.575-69.5-39.18-104.253-58.76a3.621 3.621 0 0 0-4.094-.006C91.2 39.257 56.465 58.88 21.712 78.454c-1.42.646-2.373 2.071-2.204 3.653.006 39.245 0 78.497 0 117.748a3.329 3.329 0 0 0 1.89 3.303c9.274 5.259 18.56 10.481 27.84 15.722 5.228 2.814 11.647 4.486 17.407 2.33 5.083-1.823 8.646-7.01 8.549-12.407.048-39.016-.024-78.038.036-117.048-.127-1.732 1.516-3.163 3.2-3 4.456-.03 8.918-.06 13.374.012 1.86-.042 3.14 1.823 2.91 3.568-.018 39.263.048 78.527-.03 117.79.012 10.464-4.287 21.85-13.966 26.97-11.924 6.177-26.662 4.867-38.442-1.056-10.198-5.09-19.93-11.097-29.947-16.55C5.368 215.886.555 208.357.604 200.466V81.497c-.073-7.74 4.504-15.197 11.29-18.85C46.768 42.966 81.636 23.27 116.504 3.58z\"/>\n            <path fill=\"currentColor\" d=\"M146.928 85.99c15.21-.979 31.493-.58 45.18 6.913 10.597 5.742 16.472 17.793 16.659 29.566-.296 1.588-1.956 2.464-3.472 2.355-4.413-.006-8.827.06-13.24-.03-1.872.072-2.96-1.654-3.195-3.309-1.268-5.633-4.34-11.212-9.642-13.929-8.139-4.075-17.576-3.87-26.451-3.785-6.479.344-13.446.905-18.935 4.715-4.214 2.886-5.494 8.712-3.99 13.404 1.418 3.369 5.307 4.456 8.489 5.458 18.33 4.794 37.754 4.317 55.734 10.626 7.444 2.572 14.726 7.572 17.274 15.366 3.333 10.446 1.872 22.932-5.56 31.318-6.027 6.901-14.805 10.657-23.56 12.697-11.647 2.597-23.734 2.663-35.562 1.51-11.122-1.268-22.696-4.19-31.282-11.768-7.342-6.375-10.928-16.308-10.572-25.895.085-1.619 1.697-2.748 3.248-2.615 4.444-.036 8.888-.048 13.332.006 1.775-.127 3.091 1.407 3.182 3.08.82 5.367 2.837 11 7.517 14.182 9.032 5.827 20.365 5.428 30.707 5.591 8.568-.38 18.186-.495 25.178-6.158 3.689-3.23 4.782-8.634 3.785-13.283-1.08-3.925-5.186-5.754-8.712-6.95-18.095-5.724-37.736-3.647-55.656-10.12-7.275-2.571-14.31-7.432-17.105-14.906-3.9-10.578-2.113-23.662 6.098-31.765 8.006-8.06 19.563-11.164 30.551-12.275z\"/>\n          </svg>\n          )\n        },\n        {\n          name: \"Python (Django/Flask)\",\n          level: \"Expert\",\n          proficiency: 88,\n          description: \"Building robust backend systems with Python frameworks\",\n          features: [\n            \"Django & Flask\",\n            \"API Development\",\n            \"Database Design\",\n            \"PEP Standards\"\n          ],\n          icon: (\n            <svg viewBox=\"0 0 448 512\" className=\"w-full h-full\">\n              <path fill=\"currentColor\" d=\"M439.8 200.5c-7.7-30.9-22.3-54.2-53.4-54.2h-40.1v47.4c0 36.8-31.2 67.8-66.8 67.8H172.7c-29.2 0-53.4 25-53.4 54.3v101.8c0 29 25.2 46 53.4 54.3 33.8 9.9 66.3 11.7 106.8 0 26.9-7.8 53.4-23.5 53.4-54.3v-40.7H226.2v-13.6h160.2c31.1 0 42.6-21.7 53.4-54.2 11.2-33.5 10.7-65.7 0-108.6zM286.2 404c11.1 0 20.1 9.1 20.1 20.3 0 11.3-9 20.4-20.1 20.4-11 0-20.1-9.2-20.1-20.4.1-11.3 9.1-20.3 20.1-20.3zM167.8 248.1h106.8c29.7 0 53.4-24.5 53.4-54.3V91.9c0-29-24.4-50.7-53.4-55.6-35.8-5.9-74.7-5.6-106.8.1-45.2 8-53.4 24.7-53.4 55.6v40.7h106.9v13.6h-147c-31.1 0-58.3 18.7-66.8 54.2-9.8 40.7-10.2 66.1 0 108.6 7.6 31.6 25.7 54.2 56.8 54.2H101v-48.8c0-35.3 30.5-66.4 66.8-66.4zm-6.7-142.6c-11.1 0-20.1-9.1-20.1-20.3.1-11.3 9-20.4 20.1-20.4 11 0 20.1 9.2 20.1 20.4s-9 20.3-20.1 20.3z\"/>\n            </svg>\n          )\n        }\n      ]\n    },\n    {\n      name: \"DevOps & Tools\",\n      description: \"Infrastructure and development tools\",\n      technologies: [\n        {\n          name: \"Docker & Kubernetes\",\n          level: \"Advanced\",\n          proficiency: 85,\n          description: \"Container orchestration and deployment automation\",\n          features: [\n            \"Containerization\",\n            \"Orchestration\",\n            \"Deployment\",\n            \"Scaling\"\n          ],\n          icon: (\n            <svg  viewBox=\"0 0 640 512\">\n<path fill=\"currentColor\" d=\"M349.9 236.3h-66.1v-59.4h66.1v59.4zm0-204.3h-66.1v60.7h66.1V32zm78.2 144.8H362v59.4h66.1v-59.4zm-156.3-72.1h-66.1v60.1h66.1v-60.1zm78.1 0h-66.1v60.1h66.1v-60.1zm276.8 100c-14.4-9.7-47.6-13.2-73.1-8.4-3.3-24-16.7-44.9-41.1-63.7l-14-9.3-9.3 14c-18.4 27.8-23.4 73.6-3.7 103.8-8.7 4.7-25.8 11.1-48.4 10.7H2.4c-8.7 50.8 5.8 116.8 44 162.1 37.1 43.9 92.7 66.2 165.4 66.2 157.4 0 273.9-72.5 328.4-204.2 21.4.4 67.6.1 91.3-45.2 1.5-2.5 6.6-13.2 8.5-17.1l-13.3-8.9zm-511.1-27.9h-66v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm78.1 0h-66.1v59.4h66.1v-59.4zm-78.1-72.1h-66.1v60.1h66.1v-60.1z\"/>\n</svg>\n          )\n        },\n        {\n          name: \"CI/CD & Git\",\n          level: \"Expert\",\n          proficiency: 92,\n          description: \"Version control and deployment automation\",\n          features: [\n            \"Git Workflows\",\n            \"CI/CD Pipelines\",\n            \"Testing\",\n            \"Automation\"\n          ],\n          icon: (\n            <svg viewBox=\"0 0 24 24\" className=\"w-full h-full\">\n              <path fill=\"currentColor\" d=\"M23.546 10.93L13.067.452c-.604-.603-1.582-.603-2.188 0L8.708 2.627l2.76 2.76c.645-.215 1.379-.07 1.889.441.516.515.658 1.258.438 1.9l2.658 2.66c.645-.223 1.387-.078 1.9.435.721.72.721 1.884 0 2.604-.719.719-1.881.719-2.6 0-.539-.541-.674-1.337-.404-1.996L12.86 8.955v6.525c.176.086.342.203.488.348.713.721.713 1.883 0 2.6-.719.721-1.889.721-2.609 0-.719-.719-.719-1.879 0-2.598.182-.18.387-.316.605-.406V8.835c-.217-.091-.424-.222-.6-.401-.545-.545-.676-1.342-.396-2.009L7.636 3.7.45 10.881c-.6.605-.6 1.584 0 2.189l10.48 10.477c.604.604 1.582.604 2.186 0l10.43-10.43c.605-.603.605-1.582 0-2.187\"/>\n            </svg>\n          )\n        }\n      ]\n    }\n  ];\n\n  return (\n    <section className=\"relative py-24 bg-white\">\n      {/* Modern subtle background */}\n      <div className=\"absolute inset-0\">\n        <div \n          className=\"absolute inset-0 opacity-[0.02]\"\n          style={{\n            backgroundImage: `radial-gradient(circle at center, currentColor 1px, transparent 1px)`,\n            backgroundSize: '24px 24px',\n          }}\n          aria-hidden=\"true\"\n        />\n        <div className=\"absolute top-0 right-0 w-96 h-96 bg-blue-50 rounded-full blur-3xl opacity-20\" />\n        <div className=\"absolute bottom-0 left-0 w-96 h-96 bg-indigo-50 rounded-full blur-3xl opacity-20\" />\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Section Header */}\n        <div className=\"text-center mb-20\">\n          <h2 className=\"text-sm font-semibold text-blue-600 tracking-wide uppercase mb-2\">\n            Technical Proficiency\n          </h2>\n          <h3 className=\"text-4xl font-bold text-gray-900 sm:text-5xl mb-4\">\n            Core Technologies & Expertise\n          </h3>\n          <p className=\"max-w-2xl mx-auto text-xl text-gray-500\">\n            Building scalable web applications with modern technologies\n          </p>\n        </div>\n\n        {/* Category Navigation */}\n        <div className=\"mb-12 flex justify-center\">\n          <div className=\"inline-flex p-1.5 bg-gray-100 rounded-2xl shadow-sm\">\n            {categories.map((category, index) => (\n              <button\n                key={category.name}\n                onClick={() => setSelectedCategory(index)}\n                className={`\n                  relative px-8 py-3 rounded-xl text-sm font-medium transition-all duration-300\n                  ${selectedCategory === index \n                    ? 'text-blue-600 bg-white shadow-sm' \n                    : 'text-gray-600 hover:text-gray-900'\n                  }\n                `}\n              >\n                {category.name}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        {/* Technology Grid */}\n        <AnimatePresence mode=\"wait\">\n          <motion.div\n            key={selectedCategory}\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n            transition={{ duration: 0.3 }}\n            className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\"\n          >\n            {categories[selectedCategory].technologies.map((tech, index) => (\n              <motion.div\n                key={tech.name}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                className=\"group relative\"\n              >\n                <div className=\"relative h-full bg-white p-8 rounded-2xl shadow-sm border border-gray-100 \n                  hover:shadow-lg hover:border-blue-100 transition-all duration-300\">\n                  {/* Tech Header */}\n                  <div className=\"flex items-start justify-between mb-6\">\n                    <div>\n                      <div className=\"flex items-center space-x-3 mb-3\">\n                        <div className=\"w-12 h-12 bg-blue-50 rounded-xl p-2.5 text-blue-600\">\n                          {tech.icon}\n                        </div>\n                        <span className={`px-3 py-1 rounded-full text-xs font-semibold\n                          ${tech.level === 'Expert' \n                            ? 'bg-blue-100 text-blue-700' \n                            : tech.level === 'Advanced'\n                            ? 'bg-indigo-100 text-indigo-700'\n                            : 'bg-gray-100 text-gray-700'\n                          }`}\n                        >\n                          {tech.level}\n                        </span>\n                      </div>\n                      <h4 className=\"text-xl font-bold text-gray-900 mb-2\">{tech.name}</h4>\n                      <p className=\"text-gray-600 text-sm\">{tech.description}</p>\n                    </div>\n                  </div>\n\n                  {/* Proficiency Circle */}\n                  <div className=\"mb-6 flex justify-center\">\n                    <ProficiencyCircle percentage={tech.proficiency} />\n                  </div>\n\n                  {/* Features List */}\n                  <div className=\"space-y-2\">\n                    {tech.features.map((feature, idx) => (\n                      <div key={idx} className=\"flex items-center space-x-2\">\n                        <div className=\"w-1.5 h-1.5 rounded-full bg-blue-600\" />\n                        <span className=\"text-sm text-gray-600\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </motion.div>\n        </AnimatePresence>\n      </div>\n    </section>\n  );\n};\n\nexport default TechStackSection;","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n"],"names":["TechStackSection","selectedCategory","setSelectedCategory","useState","ProficiencyCircle","_ref","percentage","circumference","Math","PI","strokeDashoffset","isVisible","setIsVisible","circleRef","useRef","useEffect","observer","IntersectionObserver","_ref2","entry","isIntersecting","disconnect","threshold","current","observe","_jsxs","ref","className","children","_jsx","cx","cy","r","strokeWidth","fill","strokeDasharray","style","transition","categories","name","description","technologies","level","proficiency","features","icon","viewBox","stroke","rx","ry","transform","d","backgroundImage","backgroundSize","map","category","index","onClick","AnimatePresence","mode","motion","div","initial","opacity","y","animate","exit","duration","tech","delay","feature","idx","PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","PopChild","id","useId","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","onExitComplete","custom","presenceAffectsLayout","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","exitBeforeEnter","invariant","presentChildren","presentKeys","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete"],"sourceRoot":""}