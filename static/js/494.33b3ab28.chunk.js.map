{"version":3,"file":"static/js/494.33b3ab28.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.17\", `Attempting to mix Motion versions ${nextValue.version} with 11.11.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","clearTime","time","set","newTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","sqrt","getValueTransition","transition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement","item","any","numSubscriptions","getSize","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy"],"sourceRoot":""}