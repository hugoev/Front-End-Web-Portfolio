{"version":3,"file":"static/js/experience.4cf8c192.chunk.js","mappings":"iMAUA,MAAMA,UAAwBC,EAAAA,UAC1BC,uBAAAA,CAAwBC,GACpB,MAAMC,EAAUC,KAAKC,MAAMC,SAASC,QACpC,GAAIJ,GAAWD,EAAUM,YAAcJ,KAAKC,MAAMG,UAAW,CACzD,MAAMC,EAAOL,KAAKC,MAAMK,QAAQH,QAChCE,EAAKE,OAASR,EAAQS,cAAgB,EACtCH,EAAKI,MAAQV,EAAQW,aAAe,EACpCL,EAAKM,IAAMZ,EAAQa,UACnBP,EAAKQ,KAAOd,EAAQe,UACxB,CACA,OAAO,IACX,CAIAC,kBAAAA,GAAuB,CACvBC,MAAAA,GACI,OAAOhB,KAAKC,MAAMgB,QACtB,EAEJ,SAASC,EAAQC,GAA0B,IAAzB,SAAEF,EAAQ,UAAEb,GAAWe,EACrC,MAAMC,GAAKC,EAAAA,EAAAA,SACLC,GAAMC,EAAAA,EAAAA,QAAO,MACblB,GAAOkB,EAAAA,EAAAA,QAAO,CAChBd,MAAO,EACPF,OAAQ,EACRI,IAAK,EACLE,KAAM,KAEJ,MAAEW,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GAkC7B,OAxBAC,EAAAA,EAAAA,qBAAmB,KACf,MAAM,MAAElB,EAAK,OAAEF,EAAM,IAAEI,EAAG,KAAEE,GAASR,EAAKF,QAC1C,GAAIC,IAAckB,EAAInB,UAAYM,IAAUF,EACxC,OACJe,EAAInB,QAAQyB,QAAQC,YAAcT,EAClC,MAAMU,EAAQC,SAASC,cAAc,SAerC,OAdIR,IACAM,EAAMN,MAAQA,GAClBO,SAASE,KAAKC,YAAYJ,GACtBA,EAAMK,OACNL,EAAMK,MAAMC,WAAW,oCACFhB,yEAEZX,wCACCF,qCACHI,sCACCE,0CAIL,KACHkB,SAASE,KAAKI,YAAYP,EAAM,CACnC,GACF,CAAC1B,KACIkC,EAAAA,EAAAA,KAAI3C,EAAiB,CAAES,UAAWA,EAAWF,SAAUoB,EAAKhB,QAASD,EAAMY,SAAUrB,EAAAA,aAAmBqB,EAAU,CAAEK,SAChI,CClEA,MAAMiB,EAAgBpB,IAA4F,IAA3F,SAAEF,EAAQ,QAAEuB,EAAO,UAAEpC,EAAS,eAAEqC,EAAc,OAAEC,EAAM,sBAAEC,EAAqB,KAAEC,GAAOzB,EACzG,MAAM0B,GAAmBC,EAAAA,EAAAA,GAAYC,GAC/B3B,GAAKC,EAAAA,EAAAA,SACL2B,GAAyBC,EAAAA,EAAAA,cAAaC,IACxCL,EAAiBM,IAAID,GAAS,GAC9B,IAAK,MAAME,KAAcP,EAAiBQ,SACtC,IAAKD,EACD,OAERX,GAAkBA,GAAgB,GACnC,CAACI,EAAkBJ,IAChBa,GAAUC,EAAAA,EAAAA,UAAQ,KAAM,CAC1BnC,KACAoB,UACApC,YACAsC,SACAD,eAAgBO,EAChBQ,SAAWN,IACPL,EAAiBM,IAAID,GAAS,GACvB,IAAML,EAAiBY,OAAOP,OAQ7CP,EACM,CAACe,KAAKC,SAAUX,GAChB,CAAC5C,EAAW4C,IAiBlB,OAhBAO,EAAAA,EAAAA,UAAQ,KACJV,EAAiBe,SAAQ,CAACC,EAAGC,IAAQjB,EAAiBM,IAAIW,GAAK,IAAO,GACvE,CAAC1D,IAKJR,EAAAA,WAAgB,MACXQ,IACIyC,EAAiBxC,MAClBoC,GACAA,GAAgB,GACrB,CAACrC,IACS,cAATwC,IACA3B,GAAWqB,EAAAA,EAAAA,KAAIpB,EAAU,CAAEd,UAAWA,EAAWa,SAAUA,MAEvDqB,EAAAA,EAAAA,KAAIyB,EAAAA,EAAgBC,SAAU,CAAEC,MAAOX,EAASrC,SAAUA,GAAW,EAEjF,SAAS8B,IACL,OAAO,IAAImB,GACf,C,wBCxDA,MAAMC,EAAeC,GAAUA,EAAMN,KAAO,GAC5C,SAASO,EAAapD,GAClB,MAAMqD,EAAW,GAMjB,OAJAC,EAAAA,SAASX,QAAQ3C,GAAWmD,KACpBI,EAAAA,EAAAA,gBAAeJ,IACfE,EAASG,KAAKL,EAAM,IAErBE,CACX,C,aCgCA,MAAMI,EAAkBvD,IAAyH,IAAxH,SAAEF,EAAQ,gBAAE0D,EAAe,OAAEjC,EAAM,QAAEF,GAAU,EAAI,eAAEC,EAAc,sBAAEE,GAAwB,EAAI,KAAEC,EAAO,QAASzB,GACxIyD,EAAAA,EAAAA,IAAWD,EAAiB,4CAK5B,MAAME,GAAkBtB,EAAAA,EAAAA,UAAQ,IAAMc,EAAapD,IAAW,CAACA,IAKzD6D,EAAcD,EAAgBE,IAAIZ,GAIlCa,GAAkBzD,EAAAA,EAAAA,SAAO,GAMzB0D,GAAyB1D,EAAAA,EAAAA,QAAOsD,GAIhCK,GAAepC,EAAAA,EAAAA,IAAY,IAAM,IAAIoB,OAKpCiB,EAAgBC,IAAqBC,EAAAA,EAAAA,UAASR,IAC9CS,EAAkBC,IAAuBF,EAAAA,EAAAA,UAASR,IACzDW,EAAAA,EAAAA,IAA0B,KACtBR,EAAgB7E,SAAU,EAC1B8E,EAAuB9E,QAAU0E,EAIjC,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAiBI,OAAQD,IAAK,CAC9C,MAAM3B,EAAMK,EAAYmB,EAAiBG,IACpCX,EAAYa,SAAS7B,GAMtBoB,EAAazB,OAAOK,IALU,IAA1BoB,EAAaU,IAAI9B,IACjBoB,EAAa/B,IAAIW,GAAK,EAMlC,IACD,CAACwB,EAAkBR,EAAYY,OAAQZ,EAAYe,KAAK,OAC3D,MAAMC,EAAkB,GACxB,GAAIjB,IAAoBM,EAAgB,CACpC,IAAIY,EAAe,IAAIlB,GAKvB,IAAK,IAAIY,EAAI,EAAGA,EAAIH,EAAiBI,OAAQD,IAAK,CAC9C,MAAMrB,EAAQkB,EAAiBG,GACzB3B,EAAMK,EAAYC,GACnBU,EAAYa,SAAS7B,KACtBiC,EAAaC,OAAOP,EAAG,EAAGrB,GAC1B0B,EAAgBrB,KAAKL,GAE7B,CAcA,MATa,SAATxB,GAAmBkD,EAAgBJ,SACnCK,EAAeD,GAEnBP,EAAoBlB,EAAa0B,SACjCX,EAAkBP,EAMtB,CAWA,MAAM,YAAEoB,IAAgBxE,EAAAA,EAAAA,YAAWyE,EAAAA,GACnC,OAAQ5D,EAAAA,EAAAA,KAAI6D,EAAAA,SAAU,CAAElF,SAAUqE,EAAiBP,KAAKX,IAChD,MAAMN,EAAMK,EAAYC,GAClBhE,EAAYyE,IAAoBS,GAClCR,EAAYa,SAAS7B,GAmBzB,OAAQxB,EAAAA,EAAAA,KAAIC,EAAe,CAAEnC,UAAWA,EAAWoC,UAAUwC,EAAgB7E,UAAWqC,SAC9E4D,EACO1D,OAAQtC,OAAYgG,EAAY1D,EAAQC,sBAAuBA,EAAuBC,KAAMA,EAAMH,eAAgBrC,OAAYgG,EApBhIC,KACX,IAAInB,EAAaoB,IAAIxC,GAIjB,OAHAoB,EAAa/B,IAAIW,GAAK,GAK1B,IAAIyC,GAAsB,EAC1BrB,EAAatB,SAAS4C,IACbA,IACDD,GAAsB,EAAK,IAE/BA,IACgB,OAAhBN,QAAwC,IAAhBA,GAAkCA,IAC1DV,EAAoBN,EAAuB9E,SAC3CsC,GAAkBA,IACtB,EAI+JxB,SAAUmD,GAASN,EAAI,KACzL,EClJP2C,EAA4B,CAChC,CACEC,QAAS,QACTC,MACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAAUC,QAAQ,YAAYC,KAAK,eAAc9F,SAAA,EAC9D+F,EAAAA,EAAAA,KAAA,QAAMC,EAAE,0HACRD,EAAAA,EAAAA,KAAA,QAAMC,EAAE,8UAGZC,KAAM,oBACNC,OAAQ,iBACRC,YAAa,CACX,mEACA,2DACA,kEACA,8DAEFC,OAAQ,CAAC,oBAAqB,kBAAmB,MAAO,UAE1D,CACEX,QAAS,oBACTC,MACEK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAAUC,QAAQ,YAAYC,KAAK,eAAc9F,UAC9D+F,EAAAA,EAAAA,KAAA,QAAMC,EAAE,iGAGZC,KAAM,oBACNC,OAAQ,iBACRC,YAAa,CACX,gDACA,8DACA,sDACA,0CAEFC,OAAQ,CAAC,QAAS,UAAW,aAAc,eAE7C,CACEX,QAAS,OACTC,MACEK,EAAAA,EAAAA,KAAA,OAAKH,UAAU,UAAUC,QAAQ,YAAYC,KAAK,eAAc9F,UAC9D+F,EAAAA,EAAAA,KAAA,QAAMC,EAAE,4EAGZC,KAAM,qBACNC,OAAQ,cACRC,YAAa,CACX,yCACA,2CACA,4CACA,wCAEFC,OAAQ,CAAC,WAAY,gBAAiB,SAAU,sBAI9CC,GAAmBC,EAAAA,EAAAA,OAAKpG,IAAA,IAAC,WAC7BqG,EAAU,SACVC,EAAQ,QACRC,GAKDvG,EAAA,OACC6F,EAAAA,EAAAA,KAACW,EAAAA,EAAOC,OAAM,CACZF,QAASA,EACTlF,SAAS,EACTqE,UAAU,mBAAkB5F,UAE5B2F,EAAAA,EAAAA,MAAA,OAAKC,UAAW,4CACdY,EACI,4CACA,uEACHxG,SAAA,EACD2F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyB5F,SAAA,EACtC+F,EAAAA,EAAAA,KAAA,OAAKH,UAAW,0DACdY,EAAW,gBAAkB,iBAC5BxG,SACAuG,EAAWb,QAEdC,EAAAA,EAAAA,MAAA,OAAA3F,SAAA,EACE+F,EAAAA,EAAAA,KAAA,MAAIH,UAAW,kBACbY,EAAW,gBAAkB,iBAC5BxG,SACAuG,EAAWd,WAEdM,EAAAA,EAAAA,KAAA,KAAGH,UAAU,wBAAuB5F,SAAEuG,EAAWL,eAGpDM,IACCT,EAAAA,EAAAA,KAAA,OAAKH,UAAU,+GAGL,IAGZgB,GAAoBN,EAAAA,EAAAA,OAAKO,IAAA,IAAC,WAAEN,GAAwCM,EAAA,OACxElB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoE5F,SAAA,EACjF2F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAM5F,SAAA,EACnB+F,EAAAA,EAAAA,KAAA,MAAIH,UAAU,wCAAuC5F,SAClDuG,EAAWN,QAEdN,EAAAA,EAAAA,MAAA,KAAGC,UAAU,gBAAe5F,SAAA,CACzBuG,EAAWd,QAAQ,SAAIc,EAAWL,cAIvCH,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgB5F,SAC5BuG,EAAWJ,YAAYrC,KAAI,CAACgD,EAAMC,KACjCpB,EAAAA,EAAAA,MAAA,OAEEC,UAAU,yBAAwB5F,SAAA,EAElC+F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,+CACfG,EAAAA,EAAAA,KAAA,KAAGH,UAAU,gBAAe5F,SAAE8G,MAJzBC,QASXpB,EAAAA,EAAAA,MAAA,OAAA3F,SAAA,EACE+F,EAAAA,EAAAA,KAAA,MAAIH,UAAU,2CAA0C5F,SAAC,2BAGzD+F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,uBAAsB5F,SAClCuG,EAAWH,OAAOtC,KAAI,CAACkD,EAAOD,KAC7BhB,EAAAA,EAAAA,KAAA,QAEEH,UAAU,iFAAgF5F,SAEzFgH,GAHID,YAQT,IAGFE,EAA8BA,KAClC,MAAOC,EAAaC,IAAkB/C,EAAAA,EAAAA,UAAS,GAEzCgD,GAAwBpF,EAAAA,EAAAA,cAAa+E,IACzCI,EAAeJ,EAAM,GACpB,IAEH,OACEpB,EAAAA,EAAAA,MAAA,WAASxF,GAAG,aAAayF,UAAU,0CAAyC5F,SAAA,EAC1E2F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkB5F,SAAA,EAC/B+F,EAAAA,EAAAA,KAAA,OACEH,UAAU,kCACV/E,MAAO,CACLwG,gBACE,kJACFC,eAAgB,gBAGpBvB,EAAAA,EAAAA,KAAA,OAAKH,UAAU,6EACfG,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iFAGjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiD5F,SAAA,EAC9D2F,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmB5F,SAAA,EAChC+F,EAAAA,EAAAA,KAAA,MAAIH,UAAU,wCAAuC5F,SAAC,0BACtD+F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kDAGjBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,8CAA6C5F,SAAA,EAC1D+F,EAAAA,EAAAA,KAAA,OAAKH,UAAU,qBAAoB5F,SAChCwF,EAAY1B,KAAI,CAACyD,EAAKR,KACrBhB,EAAAA,EAAAA,KAACM,EAAgB,CAEfE,WAAYgB,EACZf,SAAUU,IAAgBH,EAC1BN,QAASA,IAAMW,EAAsBL,IAHhCQ,EAAI9B,cAQfM,EAAAA,EAAAA,KAACtC,EAAe,CAAC9B,KAAK,OAAM3B,UAC1B+F,EAAAA,EAAAA,KAACW,EAAAA,EAAOc,IAAG,CAETjG,QAAS,CAAEkG,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GACjBG,WAAY,CAAEC,SAAU,IAAM7H,UAE9B+F,EAAAA,EAAAA,KAACa,EAAiB,CAACL,WAAYf,EAAY0B,MANtCA,aAWL,EAId,GAAeZ,EAAAA,EAAAA,MAAKW,E","sources":["../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","components/ExperienceSection.tsx"],"sourcesContent":["\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useCallback, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const memoizedOnExitComplete = useCallback((childId) => {\n        presenceChildren.set(childId, true);\n        for (const isComplete of presenceChildren.values()) {\n            if (!isComplete)\n                return; // can stop searching when any is incomplete\n        }\n        onExitComplete && onExitComplete();\n    }, [presenceChildren, onExitComplete]);\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: memoizedOnExitComplete,\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout\n        ? [Math.random(), memoizedOnExitComplete]\n        : [isPresent, memoizedOnExitComplete]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","\"use client\";\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import React, { useState, useCallback, memo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface Experience {\n  company: string;\n  logo: string | JSX.Element;\n  role: string;\n  period: string;\n  description: string[];\n  skills: string[];\n}\n\n// Experiences data moved outside component\nconst experiences: Experience[] = [\n  {\n    company: \"Apple\",\n    logo: (\n      <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M13 3.5c.73-.83 1.94-1.46 2.94-1.5.13 1.17-.34 2.35-1.04 3.19-.69.85-1.83 1.51-2.95 1.42-.15-1.15.41-2.35 1.05-3.11z\"/>\n        <path d=\"M18.71 19.5c-.83 1.24-1.71 2.45-3.05 2.47-1.34.03-1.77-.79-3.29-.79-1.53 0-2 .77-3.27.82-1.31.05-2.3-1.32-3.14-2.53C4.25 17 2.94 12.45 4.7 9.39c.87-1.52 2.43-2.48 4.12-2.51 1.28-.02 2.5.87 3.29.87.78 0 2.26-1.07 3.81-.91.65.03 2.47.26 3.64 1.98-.09.06-2.17 1.28-2.15 3.81.03 3.02 2.65 4.03 2.68 4.04-.03.07-.42 1.44-1.38 2.83z\"/>\n      </svg>\n    ),\n    role: \"Technical Support\",\n    period: \"2023 - Present\",\n    description: [\n      \"Provide expert technical support for Apple products and services\",\n      \"Resolve complex hardware and software issues effectively\",\n      \"Maintain high customer satisfaction through clear communication\",\n      \"Collaborate with team members to tackle technical problems\"\n    ],\n    skills: [\"Technical Support\", \"Problem Solving\", \"iOS\", \"macOS\"]\n  },\n  {\n    company: \"Software Engineer\",\n    logo: (\n      <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n      </svg>\n    ),\n    role: \"Software Engineer\",\n    period: \"2023 - Present\",\n    description: [\n      \"Developed custom web applications for clients\",\n      \"Implemented full-stack solutions from concept to deployment\",\n      \"Managed project lifecycles and client communication\",\n      \"Created scalable and maintainable code\"\n    ],\n    skills: [\"React\", \"Next.js\", \"TypeScript\", \"PostgreSQL\"]\n  },\n  {\n    company: \"UTSA\",\n    logo: (\n      <svg className=\"w-8 h-8\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n        <path d=\"M12 3L1 9l11 6l9-4.91V17h2V9M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82Z\"/>\n      </svg>\n    ),\n    role: \"Research Assistant\",\n    period: \"2023 - 2024\",\n    description: [\n      \"Conducted research in computer science\",\n      \"Assisted in data collection and analysis\",\n      \"Collaborated with faculty and researchers\",\n      \"Contributed to academic publications\"\n    ],\n    skills: [\"Research\", \"Data Analysis\", \"Python\", \"Machine Learning\"]\n  }\n];\n\nconst ExperienceButton = memo(({ \n  experience, \n  isActive, \n  onClick \n}: { \n  experience: Experience; \n  isActive: boolean; \n  onClick: () => void;\n}) => (\n  <motion.button\n    onClick={onClick}\n    initial={false}\n    className=\"w-full text-left\"\n  >\n    <div className={`relative p-6 rounded-2xl transition-all ${\n      isActive \n        ? 'bg-white shadow-lg border border-blue-100' \n        : 'bg-gray-50 hover:bg-white hover:shadow-md border border-transparent'\n    }`}>\n      <div className=\"flex items-center gap-4\">\n        <div className={`w-12 h-12 rounded-xl flex items-center justify-center ${\n          isActive ? 'text-blue-600' : 'text-gray-400'\n        }`}>\n          {experience.logo}\n        </div>\n        <div>\n          <h3 className={`font-semibold ${\n            isActive ? 'text-gray-900' : 'text-gray-600'\n          }`}>\n            {experience.company}\n          </h3>\n          <p className=\"text-sm text-gray-500\">{experience.period}</p>\n        </div>\n      </div>\n      {isActive && (\n        <div className=\"absolute -right-[2px] top-1/2 -translate-y-1/2 w-[2px] h-12 bg-gradient-to-b from-blue-400 to-blue-600\"/>\n      )}\n    </div>\n  </motion.button>\n));\n\nconst ExperienceDetails = memo(({ experience }: { experience: Experience }) => (\n  <div className=\"relative bg-white rounded-2xl p-8 border border-blue-100 shadow-lg\">\n    <div className=\"mb-6\">\n      <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\n        {experience.role}\n      </h3>\n      <p className=\"text-gray-600\">\n        {experience.company} · {experience.period}\n      </p>\n    </div>\n\n    <div className=\"space-y-4 mb-8\">\n      {experience.description.map((item, index) => (\n        <div \n          key={index}\n          className=\"flex items-start gap-3\"\n        >\n          <div className=\"w-1.5 h-1.5 rounded-full mt-2 bg-blue-500\"/>\n          <p className=\"text-gray-600\">{item}</p>\n        </div>\n      ))}\n    </div>\n\n    <div>\n      <h4 className=\"text-sm font-semibold text-gray-700 mb-3\">\n        Technologies & Skills\n      </h4>\n      <div className=\"flex flex-wrap gap-2\">\n        {experience.skills.map((skill, index) => (\n          <span\n            key={index}\n            className=\"px-3 py-1 rounded-full text-sm bg-blue-50 text-blue-600 border border-blue-100\"\n          >\n            {skill}\n          </span>\n        ))}\n      </div>\n    </div>\n  </div>\n));\n\nconst ExperienceSection: React.FC = () => {\n  const [activeIndex, setActiveIndex] = useState(0);\n\n  const handleExperienceClick = useCallback((index: number) => {\n    setActiveIndex(index);\n  }, []);\n\n  return (\n    <section id=\"experience\" className=\"relative py-20 bg-white overflow-hidden\">\n      <div className=\"absolute inset-0\">\n        <div \n          className=\"absolute inset-0 opacity-[0.03]\"\n          style={{\n            backgroundImage: \n              'linear-gradient(to right, rgba(37, 99, 235, 0.1) 1px, transparent 1px), linear-gradient(to bottom, rgba(37, 99, 235, 0.1) 1px, transparent 1px)',\n            backgroundSize: '64px 64px',\n          }}\n        />\n        <div className=\"absolute top-0 -right-40 w-96 h-96 bg-blue-100/50 rounded-full blur-3xl\"/>\n        <div className=\"absolute bottom-0 -left-40 w-96 h-96 bg-blue-50/50 rounded-full blur-3xl\"/>\n      </div>\n\n      <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-20\">\n          <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">Professional Journey</h2>\n          <div className=\"h-1 w-20 bg-blue-600 mx-auto rounded-full\" />\n        </div>\n\n        <div className=\"grid lg:grid-cols-[1fr,2fr] gap-8 lg:gap-12\">\n          <div className=\"relative space-y-4\">\n            {experiences.map((exp, index) => (\n              <ExperienceButton\n                key={exp.company}\n                experience={exp}\n                isActive={activeIndex === index}\n                onClick={() => handleExperienceClick(index)}\n              />\n            ))}\n          </div>\n\n          <AnimatePresence mode=\"wait\">\n            <motion.div\n              key={activeIndex}\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              transition={{ duration: 0.2 }}\n            >\n              <ExperienceDetails experience={experiences[activeIndex]} />\n            </motion.div>\n          </AnimatePresence>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default memo(ExperienceSection);"],"names":["PopChildMeasure","React","getSnapshotBeforeUpdate","prevProps","element","this","props","childRef","current","isPresent","size","sizeRef","height","offsetHeight","width","offsetWidth","top","offsetTop","left","offsetLeft","componentDidUpdate","render","children","PopChild","_ref","id","useId","ref","useRef","nonce","useContext","MotionConfigContext","useInsertionEffect","dataset","motionPopId","style","document","createElement","head","appendChild","sheet","insertRule","removeChild","jsx","PresenceChild","initial","onExitComplete","custom","presenceAffectsLayout","mode","presenceChildren","useConstant","newChildrenMap","memoizedOnExitComplete","useCallback","childId","set","isComplete","values","context","useMemo","register","delete","Math","random","forEach","_","key","PresenceContext","Provider","value","Map","getChildKey","child","onlyElements","filtered","Children","isValidElement","push","AnimatePresence","exitBeforeEnter","invariant","presentChildren","presentKeys","map","isInitialRender","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","renderedChildren","setRenderedChildren","useIsomorphicLayoutEffect","i","length","includes","get","join","exitingChildren","nextChildren","splice","forceRender","LayoutGroupContext","Fragment","undefined","onExit","has","isEveryExitComplete","isExitComplete","experiences","company","logo","_jsxs","className","viewBox","fill","_jsx","d","role","period","description","skills","ExperienceButton","memo","experience","isActive","onClick","motion","button","ExperienceDetails","_ref2","item","index","skill","ExperienceSection","activeIndex","setActiveIndex","handleExperienceClick","backgroundImage","backgroundSize","exp","div","opacity","animate","exit","transition","duration"],"sourceRoot":""}