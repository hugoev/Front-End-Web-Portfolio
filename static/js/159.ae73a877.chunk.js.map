{"version":3,"file":"static/js/159.ae73a877.chunk.js","mappings":"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","sources":["components/Navbar.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Navbar: React.FC = () => {\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [activeSection, setActiveSection] = useState('home');\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 20);\n    };\n\n    const handleSectionVisibility = () => {\n      const sections = ['home', 'about', 'projects', 'experience', 'contact'];\n      const current = sections.find(section => {\n        const element = document.getElementById(section);\n        if (element) {\n          const rect = element.getBoundingClientRect();\n          return rect.top <= 100 && rect.bottom >= 100;\n        }\n        return false;\n      });\n      if (current) setActiveSection(current);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('scroll', handleSectionVisibility);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('scroll', handleSectionVisibility);\n    };\n  }, []);\n\n  const navLinks = [\n    { name: 'Home', href: '#home' },\n    { name: 'About', href: '#about' },\n    { name: 'Projects', href: '#projects' },\n    { name: 'Experience', href: '#experience' },\n    { name: 'Contact', href: '#contact' }\n  ];\n\n  const handleNavClick = (href: string) => {\n    setIsMobileMenuOpen(false);\n    const element = document.querySelector(href);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <>\n      {/* Desktop Navbar */}\n      <nav className={`fixed top-0 left-0 right-0 z-50 transition-all duration-300 ${\n        isScrolled ? 'py-4' : 'py-6'\n      }`}>\n        {/* Backdrop */}\n        <div className={`absolute inset-0 transition-all duration-300 ${\n          isScrolled ? 'bg-white/90 backdrop-blur-md shadow-sm' : 'bg-transparent'\n        }`} />\n\n        {/* Content */}\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between\"> {/* or use: justify-around */}\n            {/* Logo */}\n            <a href=\"#home\" className=\"group flex items-center space-x-2\">\n              <div className=\"relative w-10 h-10\">\n                <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-blue-400 rounded-xl blur-sm opacity-75 group-hover:opacity-100 transition duration-300\" />\n                <div className=\"relative w-full h-full bg-white rounded-xl flex items-center justify-center text-blue-600 font-bold border border-blue-100\">\n                  H\n                </div>\n              </div>\n              <span className=\"text-gray-900 font-medium\">Hugo</span>\n            </a>\n\n            {/* Desktop Navigation - Now Centered */}\n            <div className=\"hidden md:flex items-center justify-center flex-1 mx-8\">\n              {navLinks.map((link) => (\n                <button\n                  key={link.name}\n                  onClick={() => handleNavClick(link.href)}\n                  className=\"relative px-4 py-2 group\"\n                >\n                  <span className={`relative z-10 transition-colors duration-300 ${\n                    activeSection === link.href.substring(1)\n                      ? 'text-blue-600'\n                      : 'text-gray-600 group-hover:text-gray-900'\n                  }`}>\n                    {link.name}\n                  </span>\n                  \n                  {/* Active/Hover Background */}\n                  <div className={`absolute inset-0 transition-all duration-300 ${\n                    activeSection === link.href.substring(1)\n                      ? 'bg-blue-50 rounded-xl'\n                      : 'bg-transparent group-hover:bg-gray-50 rounded-xl'\n                  }`} />\n                </button>\n              ))}\n            </div>\n\n            {/* Add an empty div for symmetry */}\n            <div className=\"w-10 h-10 hidden md:block\" />\n\n            {/* Mobile Menu Button */}\n            <button\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n              className=\"md:hidden relative w-10 h-10 flex items-center justify-center\"\n            >\n              <div className={`absolute w-5 h-0.5 bg-blue-600 transition-all duration-300 ${\n                isMobileMenuOpen ? 'rotate-45' : '-translate-y-1.5'\n              }`} />\n              <div className={`absolute w-5 h-0.5 bg-blue-600 transition-all duration-300 ${\n                isMobileMenuOpen ? '-rotate-45' : 'translate-y-1.5'\n              }`} />\n            </button>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Menu */}\n      <div className={`fixed inset-0 z-40 transition-all duration-300 ${\n        isMobileMenuOpen ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'\n      }`}>\n        {/* Backdrop */}\n        <div className=\"absolute inset-0 bg-white/95 backdrop-blur-xl\" />\n\n        {/* Content */}\n        <div className=\"relative h-full flex flex-col items-center justify-center space-y-8 p-4\">\n          {navLinks.map((link) => (\n            <button\n              key={link.name}\n              onClick={() => handleNavClick(link.href)}\n              className={`text-2xl font-light transition-colors duration-300 ${\n                activeSection === link.href.substring(1)\n                  ? 'text-blue-600'\n                  : 'text-gray-600 hover:text-gray-900'\n              }`}\n            >\n              {link.name}\n            </button>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Navbar;"],"names":["Navbar","isScrolled","setIsScrolled","useState","isMobileMenuOpen","setIsMobileMenuOpen","activeSection","setActiveSection","useEffect","handleScroll","window","scrollY","handleSectionVisibility","current","find","section","element","document","getElementById","rect","getBoundingClientRect","top","bottom","addEventListener","removeEventListener","navLinks","name","href","handleNavClick","querySelector","scrollIntoView","behavior","_jsxs","_Fragment","children","className","_jsx","map","link","onClick","substring"],"sourceRoot":""}