{"version":3,"file":"static/js/796.a858803f.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { progress } from '../../../../utils/progress.mjs';\n\n// Create a linear easing point for every 10 ms\nconst resolution = 10;\nconst generateLinearEasing = (easing, duration // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.11.17\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.11.17\", `Attempting to mix Motion versions ${nextValue.version} with 11.11.17 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["LayoutGroupContext","createContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","PresenceContext","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","invariant","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","restDelta","done","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","progress","to","toFromDifference","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","generator","Infinity","calcGeneratorDuration","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","generateLinearEasing","points","numPoints","segmentEasing","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addDomEvent","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","addHoverEvent","callbackName","handleEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","createDomVisualElement","any","useLayoutEffect"],"sourceRoot":""}