{"version":3,"file":"static/js/contact.543f7a50.chunk.js","mappings":"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","sources":["components/ContactSection.tsx","../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["import React, { useRef } from 'react';\nimport { motion, useInView } from 'framer-motion';\n\nconst ContactSection: React.FC = () => {\n  const containerRef = useRef(null);\n  const isInView = useInView(containerRef, { once: true, margin: \"-100px\" });\n\n  const contactInfo = [\n    {\n      title: \"Email\",\n      value: \"hugoev@live.com\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n        </svg>\n      )\n    },\n    {\n      title: \"Location\",\n      value: \"San Antonio, TX\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n        </svg>\n      )\n    },\n    {\n      title: \"Availability\",\n      value: \"Open for opportunities\",\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n        </svg>\n      ),\n      badge: \"Available\"\n    }\n  ];\n\n  const socialLinks = [\n    { \n      name: 'GitHub',\n      href: 'https://github.com/hugoev',\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path fillRule=\"evenodd\" d=\"M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z\" />\n        </svg>\n      ),\n      color: 'hover:text-[#6e5494]'\n    },\n    { \n      name: 'LinkedIn',\n      href: 'https://www.linkedin.com/in/hugoev',\n      icon: (\n        <svg className=\"w-6 h-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n          <path d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"/>\n        </svg>\n      ),\n      color: 'hover:text-[#0077b5]'\n    }\n  ];\n\n  return (\n    <section \n  ref={containerRef}\n  id=\"contact\" \n  className=\"relative min-h-screen bg-white py-20 overflow-hidden\"\n>\n  {/* Background Elements */}\n  <div className=\"absolute inset-0\">\n    <div className=\"absolute inset-0 opacity-[0.03]\"\n      style={{\n        backgroundImage: `radial-gradient(circle at center, rgba(37, 99, 235, 0.3) 2px, transparent 2px)`,\n        backgroundSize: '48px 48px',\n        transform: 'translateZ(0)'\n      }}\n    />\n    <motion.div\n      animate={{\n        x: [0, 20, 0],\n        y: [0, 30, 0],\n      }}\n      transition={{\n        duration: 20,\n        repeat: Infinity,\n        repeatType: \"reverse\",\n        ease: \"linear\"\n      }}\n      className=\"absolute top-0 right-0 w-96 h-96 bg-blue-100/50 rounded-full blur-2xl transform-gpu\"\n      style={{\n        willChange: 'transform'\n      }}\n    />\n    <motion.div\n      animate={{\n        x: [0, -20, 0],\n        y: [0, -30, 0],\n      }}\n      transition={{\n        duration: 20,\n        repeat: Infinity,\n        repeatType: \"reverse\",\n        ease: \"linear\"\n      }}\n      className=\"absolute bottom-0 left-0 w-96 h-96 bg-blue-50/50 rounded-full blur-2xl transform-gpu\"\n      style={{\n        willChange: 'transform'\n      }}\n    />\n  </div>\n\n  <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n    {/* Section Header */}\n    <div className=\"text-center mb-16\">\n      <motion.div\n        initial={{ scale: 0.5, opacity: 0 }}\n        animate={isInView ? { scale: 1, opacity: 1 } : {}}\n        transition={{ duration: 0.5 }}\n        className=\"inline-block mb-4\"\n      >\n        <div className=\"relative\">\n          <div className=\"absolute inset-0 bg-gradient-to-r from-blue-600 to-blue-400 rounded-full blur-xl opacity-50 animate-pulse\" />\n          <div className=\"relative bg-white p-4 rounded-full border border-blue-100 shadow-lg\">\n            <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n            </svg>\n          </div>\n        </div>\n      </motion.div>\n      <h2 className=\"text-4xl font-bold text-gray-900 mb-4\">\n        Get In Touch\n      </h2>\n      <div className=\"h-1 w-20 bg-blue-600 mx-auto rounded-full mb-4\" />\n      <p className=\"text-gray-600 max-w-2xl mx-auto\">\n        Have a project in mind? Let's discuss how we can work together to bring your ideas to life.\n      </p>\n    </div>\n\n    <div className=\"grid lg:grid-cols-2 gap-12\">\n      {/* Left Column - Info Card */}\n      <motion.div\n        initial={{ opacity: 0, x: -20 }}\n        animate={isInView ? { opacity: 1, x: 0 } : {}}\n        transition={{ duration: 0.5, delay: 0.2 }}\n        className=\"space-y-8\"\n      >\n        <div className=\"relative group\">\n          <div className=\"absolute -inset-0.5 bg-gradient-to-r from-blue-600 to-blue-400 rounded-2xl opacity-20 blur group-hover:opacity-30 transition duration-300\" />\n          <div className=\"relative bg-white rounded-2xl p-8 border border-blue-100 shadow-lg\">\n            {/* Contact Info Grid */}\n            <div className=\"grid gap-6\">\n              {contactInfo.map((info) => (\n                <div key={info.title} \n                  className=\"flex items-center gap-4 group/item hover:bg-blue-50 p-4 rounded-xl transition-all duration-300\"\n                >\n                  <div className=\"p-3 bg-blue-50 rounded-xl text-blue-600 group-hover/item:scale-110 transition-transform duration-300\">\n                    {info.icon}\n                  </div>\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-600\">{info.title}</h4>\n                    <p className=\"text-gray-900\">{info.value}</p>\n                    {info.badge && (\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-600 mt-1\">\n                        <span className=\"w-1.5 h-1.5 bg-green-500 rounded-full mr-1.5 animate-pulse\" />\n                        {info.badge}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            {/* Social Links */}\n            <div className=\"mt-8 pt-8 border-t border-blue-100\">\n              <h3 className=\"text-gray-900 font-medium mb-4\">Connect With Me</h3>\n              <div className=\"flex gap-4\">\n                {socialLinks.map((social) => (\n                  <motion.a\n                    key={social.name}\n                    href={social.href}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className={`p-3 bg-blue-50 rounded-lg text-gray-600 ${social.color} border border-blue-100 hover:border-blue-200 hover:bg-blue-100 transition-all duration-300`}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    {social.icon}\n                  </motion.a>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Right Column - Contact Action */}\n      <motion.div\n        initial={{ opacity: 0, x: 20 }}\n        animate={isInView ? { opacity: 1, x: 0 } : {}}\n        transition={{ duration: 0.5, delay: 0.4 }}\n      >\n        <div className=\"relative group\">\n          <div className=\"absolute -inset-0.5 bg-gradient-to-r from-blue-600 to-blue-400 rounded-2xl opacity-20 blur group-hover:opacity-30 transition duration-300\" />\n          <div className=\"relative bg-white rounded-2xl p-8 border border-blue-100 shadow-lg\">\n            <div className=\"text-center space-y-6\">\n              <div className=\"p-4 bg-blue-50 rounded-full inline-block\">\n                <svg className=\"w-8 h-8 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={1.5} d=\"M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\n                </svg>\n              </div>\n              <div className=\"space-y-2\">\n                <h3 className=\"text-xl font-semibold text-gray-900\">Let's Work Together</h3>\n                <p className=\"text-gray-600\">\n                  Send me an email and I'll get back to you as soon as possible.\n                </p>\n              </div>\n              <a\n                href=\"mailto:hugoev@live.com\"\n                className=\"relative group inline-block w-full\"\n              >\n                <div className=\"absolute -inset-0.5 bg-gradient-to-r from-blue-600 to-blue-400 rounded-lg opacity-75 blur group-hover:opacity-100 transition duration-300\" />\n                <div className=\"relative px-8 py-3 bg-blue-600 hover:bg-blue-700 rounded-lg flex items-center justify-center space-x-2 transition-colors duration-300\">\n                  <span className=\"text-white font-medium\">Send Email</span>\n                  <svg \n                    className=\"w-5 h-5 text-white transform group-hover:translate-x-1 transition-transform duration-300\"\n                    fill=\"none\"\n                    stroke=\"currentColor\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n                  </svg>\n                </div>\n              </a>\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Response Badge */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={isInView ? { opacity: 1, y: 0 } : {}}\n          transition={{ duration: 0.5, delay: 0.6 }}\n          className=\"mt-6 flex items-center justify-center gap-2 text-sm text-gray-600\"\n        >\n          <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n          <span>Usually responds within 24 hours</span>\n        </motion.div>\n      </motion.div>\n    </div>\n  </div>\n</section>\n  );\n};\n\nexport default ContactSection;","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["ContactSection","containerRef","useRef","isInView","useInView","once","margin","contactInfo","title","value","icon","_jsx","className","fill","viewBox","stroke","children","strokeLinecap","strokeLinejoin","strokeWidth","d","_jsxs","badge","socialLinks","name","href","fillRule","color","ref","id","style","backgroundImage","backgroundSize","transform","motion","div","animate","x","y","transition","duration","repeat","Infinity","repeatType","ease","willChange","initial","scale","opacity","delay","map","info","social","a","target","rel","whileHover","whileTap","thresholds","some","all","inView","elementOrSelector","onStart","root","rootMargin","amount","arguments","length","undefined","elements","scope","selectorCache","_a","document","invariant","Boolean","current","querySelectorAll","Element","Array","from","resolveElements","activeIntersections","WeakMap","observer","IntersectionObserver","entries","forEach","entry","onEnd","get","isIntersecting","newOnEnd","set","unobserve","delete","threshold","element","observe","disconnect","setInView","useState","useEffect","options","onEnter"],"sourceRoot":""}