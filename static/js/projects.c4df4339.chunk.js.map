{"version":3,"file":"static/js/projects.c4df4339.chunk.js","mappings":"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","sources":["components/ProjectsSection.tsx","../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs"],"sourcesContent":["import React, { memo } from 'react';\nimport { motion, LazyMotion, domAnimation } from 'framer-motion';\n\ninterface Project {\n  title: string;\n  description: string;\n  tech: string[];\n  status: 'coming-soon' | 'live';\n  link?: string;\n}\n\n// Fixed ProjectPattern component\nconst ProjectPattern: React.FC = () => (\n  <svg className=\"w-full h-full transform-gpu\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n    <defs>\n      <linearGradient id=\"fade\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\n        <stop offset=\"0%\" stopColor=\"#2563EB\" stopOpacity=\"0.2\" />\n        <stop offset=\"100%\" stopColor=\"#3B82F6\" stopOpacity=\"0.1\" />\n      </linearGradient>\n    </defs>\n    <rect width=\"100\" height=\"100\" fill=\"url(#fade)\" />\n    <g className=\"opacity-30\">\n      <line x1=\"20\" y1=\"20\" x2=\"80\" y2=\"80\" stroke=\"currentColor\" strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n      <line x1=\"80\" y1=\"20\" x2=\"20\" y2=\"80\" stroke=\"currentColor\" strokeWidth=\"0.5\" strokeDasharray=\"2,2\" />\n      <path d=\"M 20 30 L 20 20 L 30 20\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" />\n      <path d=\"M 70 20 L 80 20 L 80 30\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" />\n      <path d=\"M 20 70 L 20 80 L 30 80\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" />\n      <path d=\"M 70 80 L 80 80 L 80 70\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"1\" />\n      <text x=\"50\" y=\"48\" fontSize=\"8\" fill=\"currentColor\" textAnchor=\"middle\" className=\"uppercase\">Coming</text>\n      <text x=\"50\" y=\"58\" fontSize=\"8\" fill=\"currentColor\" textAnchor=\"middle\" className=\"uppercase\">Soon</text>\n    </g>\n  </svg>\n);\n\nconst MemoizedProjectPattern = memo(ProjectPattern);\n\n// Fixed Tech Tag component\ninterface TechTagProps {\n  name: string;\n}\n\nconst TechTag: React.FC<TechTagProps> = ({ name }) => (\n  <span className=\"text-xs px-2 py-1 bg-blue-50 text-blue-600 rounded-full whitespace-nowrap border border-blue-100\">\n    {name}\n  </span>\n);\n\nconst MemoizedTechTag = memo(TechTag);\n\n// Fixed Project Status component\ninterface ProjectStatusProps {\n  status: 'coming-soon' | 'live';\n  link?: string;\n}\n\nconst ProjectStatus: React.FC<ProjectStatusProps> = ({ status, link }) => (\n  status === 'live' ? (\n    <a\n      href={link}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      className=\"inline-flex items-center text-sm text-blue-600 hover:text-blue-700 transition-colors duration-200 py-1\"\n    >\n      View Project\n      <svg className=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\n      </svg>\n    </a>\n  ) : (\n    <span className=\"inline-flex items-center text-sm text-blue-600/70 py-1\">\n      Coming Soon\n      <svg className=\"w-4 h-4 ml-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n      </svg>\n    </span>\n  )\n);\n\nconst MemoizedProjectStatus = memo(ProjectStatus);\n\n// Fixed Project Card component\ninterface ProjectCardProps {\n  project: Project;\n  index: number;\n}\n\nconst ProjectCard: React.FC<ProjectCardProps> = ({ project, index }) => (\n  <motion.div\n    initial={{ opacity: 0, y: 20 }}\n    whileInView={{ opacity: 1, y: 0 }}\n    transition={{ duration: 0.3, delay: index * 0.1 }}\n    viewport={{ once: true, margin: \"-50px\" }}\n    className=\"relative group transform-gpu will-change-transform\"\n  >\n    <div className=\"relative overflow-hidden rounded-xl\">\n      <div className=\"absolute -inset-1 bg-gradient-to-r from-blue-600 to-blue-400 rounded-xl opacity-50 group-hover:opacity-100 blur transition-opacity duration-300\" />\n      \n      <div className=\"relative bg-white p-4 sm:p-5 rounded-xl border border-blue-100 h-full\">\n        <div className=\"relative h-32 sm:h-40 mb-4 overflow-hidden rounded-lg bg-gray-50 text-blue-500\">\n          <div className=\"absolute inset-0 transition-transform duration-300 group-hover:scale-110 transform-gpu\">\n            <MemoizedProjectPattern />\n          </div>\n          <div className=\"absolute inset-0 bg-gradient-to-br from-blue-600/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300\" />\n        </div>\n\n        <h3 className=\"text-lg sm:text-xl font-semibold text-gray-900 mb-2\">\n          {project.title}\n        </h3>\n        <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">\n          {project.description}\n        </p>\n\n        <div className=\"flex flex-wrap gap-1.5 sm:gap-2 mb-4\">\n          {project.tech.map((tech) => (\n            <MemoizedTechTag key={tech} name={tech} />\n          ))}\n        </div>\n\n        <MemoizedProjectStatus status={project.status} link={project.link} />\n      </div>\n    </div>\n  </motion.div>\n);\n\nconst MemoizedProjectCard = memo(ProjectCard);\n\nconst projects: Project[] = [\n  {\n    title: \"AI Chat Platform\",\n    description: \"Real-time chat application with AI-powered responses and sentiment analysis.\",\n    tech: [\"React\", \"Node.js\", \"OpenAI\"],\n    status: 'live',\n    link: \"https://github.com/yourusername/project1\"\n  },\n  {\n    title: \"E-commerce Dashboard\",\n    description: \"Analytics dashboard for tracking sales, inventory, and customer behavior.\",\n    tech: [\"Next.js\", \"TypeScript\", \"Tailwind\"],\n    status: 'coming-soon'\n  },\n  {\n    title: \"Crypto Portfolio Tracker\",\n    description: \"Track and analyze cryptocurrency investments with real-time data.\",\n    tech: [\"React\", \"Firebase\", \"Chart.js\"],\n    status: 'coming-soon'\n  }\n];\n\nconst ProjectsSection: React.FC = () => {\n  return (\n    <LazyMotion features={domAnimation}>\n      <section id=\"projects\" className=\"bg-white py-12 sm:py-20\">\n        <div className=\"max-w-6xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-8 sm:mb-12\">\n            <h2 className=\"text-2xl sm:text-3xl font-bold text-gray-900 mb-2\">\n              Featured Projects\n            </h2>\n            <div className=\"h-1 w-16 sm:w-20 bg-blue-600 mx-auto rounded-full\" />\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\n            {projects.map((project, index) => (\n              <MemoizedProjectCard key={project.title} project={project} index={index} />\n            ))}\n          </div>\n        </div>\n      </section>\n    </LazyMotion>\n  );\n};\n\nexport default memo(ProjectsSection);","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n"],"names":["ProjectPattern","_jsxs","className","viewBox","preserveAspectRatio","children","_jsx","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","width","height","fill","stroke","strokeWidth","strokeDasharray","d","x","y","fontSize","textAnchor","MemoizedProjectPattern","memo","TechTag","_ref","name","MemoizedTechTag","ProjectStatus","_ref2","status","link","href","target","rel","strokeLinecap","strokeLinejoin","MemoizedProjectStatus","ProjectCard","_ref3","project","index","motion","div","initial","opacity","whileInView","transition","duration","delay","viewport","once","margin","title","description","tech","map","MemoizedProjectCard","projects","ProjectsSection","LazyMotion","features","domAnimation","strict","setIsLoaded","useState","isLazyBundle","loadedRenderer","useRef","undefined","renderer","loadedFeatures","current","loadFeatures","useEffect","then","jsx","LazyContext","Provider","value","createDomVisualElement","animations","gestureAnimations"],"sourceRoot":""}